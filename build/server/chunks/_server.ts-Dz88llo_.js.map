{"version":3,"file":"_server.ts-Dz88llo_.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/merge-chunks/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../chunks/index.js\";\nimport { g as getClientIP, c as checkRateLimit, v as validateCsrfFromJson, C as ConsensusComparisonEngine } from \"../../../../chunks/security.js\";\nconst POST = async ({ request, cookies }) => {\n  try {\n    const clientIP = getClientIP(request);\n    const rl = checkRateLimit(clientIP);\n    if (!rl.allowed) {\n      return json(\n        { error: rl.error || \"Rate limit exceeded. Too many requests.\" },\n        { status: rl.error ? 400 : 429, headers: rl.retryAfter ? { \"Retry-After\": rl.retryAfter.toString() } : {} }\n      );\n    }\n    const body = await request.json().catch(() => null);\n    if (!body || typeof body !== \"object\") {\n      return json({ error: \"Invalid JSON body\" }, { status: 400 });\n    }\n    const csrfCookie = cookies.get(\"csrfToken\");\n    if (!validateCsrfFromJson(body, csrfCookie)) {\n      return json({ error: \"Request could not be processed. Please try again.\" }, { status: 403 });\n    }\n    const chunkTexts = Array.isArray(body?.chunkTexts) ? body.chunkTexts : [];\n    if (chunkTexts.length === 0) {\n      return json({ error: \"No chunk texts provided\" }, { status: 400 });\n    }\n    const serviceSet = /* @__PURE__ */ new Set();\n    for (const c of chunkTexts) {\n      const map = c?.textsByService || {};\n      for (const k of Object.keys(map)) serviceSet.add(k);\n    }\n    const serviceNames = Array.from(serviceSet.values());\n    const results = serviceNames.map((svcName) => {\n      const ordered = chunkTexts.sort((a, b) => (a.index ?? 0) - (b.index ?? 0)).map((c) => c.textsByService?.[svcName] ?? \"\");\n      const assembled = mergeWithOverlap(ordered);\n      return {\n        id: `${svcName}-assembled-${Date.now()}`,\n        serviceName: svcName,\n        text: assembled,\n        processingTimeMs: 0,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: { assembledFromChunks: true }\n      };\n    });\n    const engine = new ConsensusComparisonEngine();\n    const consensus = engine.compareTranscriptions(results);\n    return json(consensus);\n  } catch (e) {\n    const msg = e instanceof Error ? e.message : \"Unknown error\";\n    return json({ error: `Failed to merge chunks: ${msg}` }, { status: 500 });\n  }\n};\nfunction mergeWithOverlap(chunks) {\n  let assembled = \"\";\n  for (const next of chunks) {\n    const text = (next || \"\").trim();\n    if (!text) continue;\n    if (!assembled) {\n      assembled = text;\n      continue;\n    }\n    const overlap = computeOverlap(assembled, text);\n    if (overlap > 0) {\n      assembled += text.slice(overlap);\n    } else {\n      assembled += \" \" + text;\n    }\n  }\n  return assembled.replace(/\\s+/g, \" \").trim();\n}\nfunction computeOverlap(a, b) {\n  const max = Math.min(100, a.length, b.length);\n  for (let k = max; k >= 10; k--) {\n    const endA = a.slice(-k).toLowerCase();\n    const startB = b.slice(0, k).toLowerCase();\n    if (endA === startB) return k;\n  }\n  return 0;\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":";;;;AAEK,MAAC,IAAI,GAAG,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;AAC7C,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC;AACzC,IAAI,MAAM,EAAE,GAAG,cAAc,CAAC,QAAQ,CAAC;AACvC,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;AAMrB,IAAI,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;AACvD,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC3C,MAAM,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAClE,IAAI;AACJ,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AAC/C,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;AACjD,MAAM,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,mDAAmD,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAClG,IAAI;AACJ,IAAI,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE;AAC7E,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,MAAM,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACxE,IAAI;AACJ,IAAI,MAAM,UAAU,mBAAmB,IAAI,GAAG,EAAE;AAChD,IAAI,KAAK,MAAM,CAAC,IAAI,UAAU,EAAE;AAChC,MAAM,MAAM,GAAG,GAAG,CAAC,EAAE,cAAc,IAAI,EAAE;AACzC,MAAM,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,IAAI;AACJ,IAAI,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;AACxD,IAAI,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;AAClD,MAAM,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;AAC9H,MAAM,MAAM,SAAS,GAAG,gBAAgB,CAAC,OAAO,CAAC;AACjD,MAAM,OAAO;AACb,QAAQ,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAChD,QAAQ,WAAW,EAAE,OAAO;AAC5B,QAAQ,IAAI,EAAE,SAAS;AACvB,QAAQ,gBAAgB,EAAE,CAAC;AAC3B,QAAQ,SAAS,kBAAkB,IAAI,IAAI,EAAE;AAC7C,QAAQ,QAAQ,EAAE,EAAE,mBAAmB,EAAE,IAAI;AAC7C,OAAO;AACP,IAAI,CAAC,CAAC;AACN,IAAI,MAAM,MAAM,GAAG,IAAI,yBAAyB,EAAE;AAClD,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC;AAC3D,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,eAAe;AAChE,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC7E,EAAE;AACF;AACA,SAAS,gBAAgB,CAAC,MAAM,EAAE;AAClC,EAAE,IAAI,SAAS,GAAG,EAAE;AACpB,EAAE,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;AAC7B,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE;AACpC,IAAI,IAAI,CAAC,IAAI,EAAE;AACf,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,MAAM,SAAS,GAAG,IAAI;AACtB,MAAM;AACN,IAAI;AACJ,IAAI,MAAM,OAAO,GAAG,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC;AACnD,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE;AACrB,MAAM,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACtC,IAAI,CAAC,MAAM;AACX,MAAM,SAAS,IAAI,GAAG,GAAG,IAAI;AAC7B,IAAI;AACJ,EAAE;AACF,EAAE,OAAO,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE;AAC9C;AACA,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;AAC9B,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;AAC1C,IAAI,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE;AAC9C,IAAI,IAAI,IAAI,KAAK,MAAM,EAAE,OAAO,CAAC;AACjC,EAAE;AACF,EAAE,OAAO,CAAC;AACV;;;;"}