{"version":3,"file":"2-B4bARB8c.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/2.js"],"sourcesContent":["const tokenStore = /* @__PURE__ */ new Map();\nconst CSRF_CONFIG = {\n  TOKEN_LENGTH: 32,\n  TOKEN_LIFETIME_MS: 30 * 60 * 1e3\n};\nfunction generateSecureRandom(length) {\n  const array = new Uint8Array(length);\n  if (typeof globalThis !== \"undefined\" && globalThis.crypto && typeof globalThis.crypto.getRandomValues === \"function\") {\n    globalThis.crypto.getRandomValues(array);\n    return Array.from(array, (byte) => byte.toString(16).padStart(2, \"0\")).join(\"\");\n  }\n  throw new Error(\"Secure random number generator (crypto.getRandomValues) is required for CSRF token generation. Node.js 20+ or a modern browser is required.\");\n}\nfunction generateCSRFToken() {\n  const token = generateSecureRandom(CSRF_CONFIG.TOKEN_LENGTH);\n  const now = Date.now();\n  tokenStore.set(token, { created: now, used: false });\n  cleanupExpiredTokens(now);\n  return token;\n}\nfunction cleanupExpiredTokens(now) {\n  for (const [token, data] of tokenStore.entries()) {\n    if (now - data.created > CSRF_CONFIG.TOKEN_LIFETIME_MS) {\n      tokenStore.delete(token);\n    }\n  }\n}\nconst load = async (event) => {\n  const csrfToken = generateCSRFToken();\n  const isHttps = event.url.protocol === \"https:\";\n  event.cookies.set(\"csrfToken\", csrfToken, {\n    path: \"/\",\n    sameSite: \"lax\",\n    secure: isHttps,\n    // don't mark secure on http://localhost so cookies are sent\n    httpOnly: true,\n    // client doesn't need to read it; server compares cookie vs form value\n    maxAge: 60 * 30\n    // 30 minutes\n  });\n  return {\n    csrfToken\n  };\n};\nexport {\n  load\n};\n","import * as server from '../entries/pages/_page.server.ts.js';\n\nexport const index = 2;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/2.CylUQ1nV.js\",\"_app/immutable/chunks/scheduler.BmpoUOXQ.js\",\"_app/immutable/chunks/index.4lF4fPyg.js\"];\nexport const stylesheets = [\"_app/immutable/assets/2.BPBGNB_A.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"AAAA,MAAM,UAAU,mBAAmB,IAAI,GAAG,EAAE;AAC5C,MAAM,WAAW,GAAG;AACpB,EAAE,YAAY,EAAE,EAAE;AAClB,EAAE,iBAAiB,EAAE,EAAE,GAAG,EAAE,GAAG;AAC/B,CAAC;AACD,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACtC,EAAE,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;AACtC,EAAE,IAAI,OAAO,UAAU,KAAK,WAAW,IAAI,UAAU,CAAC,MAAM,IAAI,OAAO,UAAU,CAAC,MAAM,CAAC,eAAe,KAAK,UAAU,EAAE;AACzH,IAAI,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC;AAC5C,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACnF,EAAE;AACF,EAAE,MAAM,IAAI,KAAK,CAAC,6IAA6I,CAAC;AAChK;AACA,SAAS,iBAAiB,GAAG;AAC7B,EAAE,MAAM,KAAK,GAAG,oBAAoB,CAAC,WAAW,CAAC,YAAY,CAAC;AAC9D,EAAE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;AACxB,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACtD,EAAE,oBAAoB,CAAC,GAAG,CAAC;AAC3B,EAAE,OAAO,KAAK;AACd;AACA,SAAS,oBAAoB,CAAC,GAAG,EAAE;AACnC,EAAE,KAAK,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE;AACpD,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,iBAAiB,EAAE;AAC5D,MAAM,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;AAC9B,IAAI;AACJ,EAAE;AACF;AACA,MAAM,IAAI,GAAG,OAAO,KAAK,KAAK;AAC9B,EAAE,MAAM,SAAS,GAAG,iBAAiB,EAAE;AACvC,EAAE,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,KAAK,QAAQ;AACjD,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE;AAC5C,IAAI,IAAI,EAAE,GAAG;AACb,IAAI,QAAQ,EAAE,KAAK;AACnB,IAAI,MAAM,EAAE,OAAO;AACnB;AACA,IAAI,QAAQ,EAAE,IAAI;AAClB;AACA,IAAI,MAAM,EAAE,EAAE,GAAG;AACjB;AACA,GAAG,CAAC;AACJ,EAAE,OAAO;AACT,IAAI;AACJ,GAAG;AACH,CAAC;;;;;;;ACzCW,MAAC,KAAK,GAAG;AACrB,IAAI,eAAe;AACP,MAAC,SAAS,GAAG,YAAY,eAAe,KAAK,CAAC,MAAM,OAAO,4BAAkC,CAAC,EAAE;AAEhG,MAAC,SAAS,GAAG;AACb,MAAC,OAAO,GAAG,CAAC,oCAAoC,CAAC,6CAA6C,CAAC,yCAAyC;AACxI,MAAC,WAAW,GAAG,CAAC,sCAAsC;AACtD,MAAC,KAAK,GAAG;;;;"}