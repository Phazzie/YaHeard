import { c as create_ssr_component, d as createEventDispatcher, f as add_attribute, h as each, e as escape, v as validate_component } from "../../chunks/ssr.js";
import { S as SUPPORTED_AUDIO_FORMATS, M as MAX_FILE_SIZE_BYTES } from "../../chunks/transcription.js";
const FileUpload = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { disabled = false } = $$props;
  let { accept = [...SUPPORTED_AUDIO_FORMATS] } = $$props;
  let { maxSize = MAX_FILE_SIZE_BYTES } = $$props;
  createEventDispatcher();
  let isUploading = false;
  if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0) $$bindings.disabled(disabled);
  if ($$props.accept === void 0 && $$bindings.accept && accept !== void 0) $$bindings.accept(accept);
  if ($$props.maxSize === void 0 && $$bindings.maxSize && maxSize !== void 0) $$bindings.maxSize(maxSize);
  return `    <div class="w-full"> <input type="file"${add_attribute("accept", accept.join(","), 0)} ${disabled || isUploading ? "disabled" : ""} class="hidden" id="file-input">  <div class="${[
    "upload-zone-enhanced rounded-3xl p-16 text-center transition-all duration-500 backdrop-blur-xl " + escape("", true) + " " + escape(
      disabled ? "opacity-50 cursor-not-allowed" : "cursor-pointer hover:shadow-neon-cyan",
      true
    ),
    ""
  ].join(" ").trim()}" role="button" tabindex="0" aria-label="Upload audio file - drag and drop or click to browse">${`<div class="flex flex-col items-center"> <div class="relative mb-8" data-svelte-h="svelte-aur6q7"><svg class="w-24 h-24 text-neon-cyan animate-float drop-shadow-2xl" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg>  <div class="absolute inset-0 w-24 h-24 border-2 border-neon-cyan rounded-full animate-ping opacity-30"></div> <div class="absolute inset-2 w-20 h-20 border border-neon-pink rounded-full animate-ping opacity-40" style="animation-delay: 0.5s;"></div></div> <p class="text-3xl font-bold text-glow-cyan mb-4 animate-neon-flicker" data-svelte-h="svelte-1t3d3y1">🎵 Drop Your Audio Here 🎵</p> <p class="text-xl text-white/90 mb-6" data-svelte-h="svelte-159deq0">or <button type="button" class="text-neon-pink hover:text-neon-cyan underline font-bold transition-colors duration-300 animate-pulse">browse files</button></p>  <div class="glass-morphism rounded-2xl p-4 border border-white/20"><p class="text-lg text-white/80 mb-2" data-svelte-h="svelte-1vhr244"><span class="text-neon-purple font-bold">Supported:</span></p> <div class="flex flex-wrap justify-center gap-2 text-sm">${each(accept, (format) => {
    return `<span class="bg-gradient-to-r from-neon-cyan/20 to-neon-purple/20 text-white px-3 py-1 rounded-full border border-neon-cyan/30 font-mono">${escape(format)} </span>`;
  })}</div> <p class="text-neon-cyan mt-2 font-bold">Max: ${escape((maxSize / 1024 / 1024).toFixed(0))}MB</p></div></div>`}</div>  ${``}  ${``}</div> `;
});
function normalizeToken(t) {
  return t.toLowerCase().replace(/^[^\w']+|[^\w']+$/g, "");
}
function extractWordConfs(r) {
  const md = r.metadata || {};
  const assemblyWords = md.rawResponse?.words;
  if (Array.isArray(assemblyWords) && assemblyWords.length > 0) {
    return assemblyWords.map((w) => ({
      token: String(w.text ?? w.word ?? "").trim(),
      confidence: typeof w.confidence === "number" ? w.confidence : void 0
    }));
  }
  const dgAlt = md.rawResponse?.results?.channels?.[0]?.alternatives?.[0];
  const dgWords = dgAlt?.words;
  if (Array.isArray(dgWords) && dgWords.length > 0) {
    return dgWords.map((w) => ({
      token: String(w.word ?? w.text ?? "").trim(),
      confidence: typeof w.confidence === "number" ? w.confidence : void 0
    }));
  }
  return (r.text || "").split(/\s+/).map((t) => ({ token: t }));
}
function formatConfidence(confidence) {
  if (confidence === void 0) return "N/A";
  return `${(confidence * 100).toFixed(1)}%`;
}
function formatTime(milliseconds) {
  if (milliseconds < 1e3) {
    return `${milliseconds}ms`;
  }
  return `${(milliseconds / 1e3).toFixed(1)}s`;
}
const ResultsDisplay = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let hasResults;
  let resultsWithConfidence;
  let averageConfidence;
  let totalProcessingTime;
  let { results = [] } = $$props;
  let { consensus = null } = $$props;
  let showHighlights = true;
  let tokenAgreement = [];
  let highlightTokens = [];
  let consensusTokens = [];
  let perServiceTokens = [];
  let trueTokenConfidence = [];
  let trueTokenConfidenceSources = [];
  let perServiceWordConfs = [];
  let agreementByService = [];
  let contestedTokens = [];
  let showRawJson = false;
  function tokenClass(score) {
    if (score >= 0.8) return "bg-green-600/20";
    if (score >= 0.5) return "bg-yellow-600/20";
    return "bg-pink-600/20";
  }
  if ($$props.results === void 0 && $$bindings.results && results !== void 0) $$bindings.results(results);
  if ($$props.consensus === void 0 && $$bindings.consensus && consensus !== void 0) $$bindings.consensus(consensus);
  hasResults = results.length > 0;
  resultsWithConfidence = results.filter((r) => typeof r.confidence === "number");
  averageConfidence = resultsWithConfidence.length > 0 ? resultsWithConfidence.reduce((sum, r) => sum + (r.confidence ?? 0), 0) / resultsWithConfidence.length : 0;
  totalProcessingTime = hasResults ? Math.max(...results.map((r) => r.processingTimeMs || 0)) : 0;
  tokenAgreement = (() => {
    if (!consensus || !consensus.finalText || results.length === 0) return [];
    const tokens = consensus.finalText.split(/\s+/);
    perServiceTokens = results.map((r) => r.text.split(/\s+/));
    const window = 2;
    const scores = new Array(tokens.length).fill(0);
    for (let i = 0; i < tokens.length; i++) {
      const t = tokens[i];
      let agreeCount = 0;
      for (const service of perServiceTokens) {
        let matched = false;
        for (let j = Math.max(0, i - window); j <= Math.min(service.length - 1, i + window); j++) {
          if (service[j] === t) {
            matched = true;
            break;
          }
        }
        if (matched) agreeCount++;
      }
      scores[i] = agreeCount / perServiceTokens.length;
    }
    return scores;
  })();
  highlightTokens = consensus?.finalText ? consensus.finalText.split(/\s+/) : [];
  consensusTokens = highlightTokens;
  perServiceWordConfs = results.map(extractWordConfs);
  trueTokenConfidence = (() => {
    if (!consensus || consensusTokens.length === 0 || results.length === 0) return [];
    const window = 2;
    const scores = new Array(consensusTokens.length).fill(0);
    const sourceCounts = new Array(consensusTokens.length).fill(0);
    for (let i = 0; i < consensusTokens.length; i++) {
      const ctNorm = normalizeToken(consensusTokens[i]);
      const contribs = [];
      for (let s = 0; s < perServiceWordConfs.length; s++) {
        const svcWords = perServiceWordConfs[s];
        if (!svcWords || svcWords.length === 0) continue;
        const mapped = Math.floor(i * svcWords.length / Math.max(1, consensusTokens.length));
        let found;
        for (let j = Math.max(0, mapped - window); j <= Math.min(svcWords.length - 1, mapped + window); j++) {
          const w = svcWords[j];
          if (normalizeToken(w.token) === ctNorm) {
            if (typeof w.confidence === "number") {
              found = Math.max(0, Math.min(1, w.confidence));
            }
            break;
          }
        }
        if (typeof found === "number") {
          contribs.push(found);
        }
      }
      if (contribs.length > 0) {
        const avg = contribs.reduce((a, b) => a + b, 0) / contribs.length;
        scores[i] = avg;
        sourceCounts[i] = contribs.length;
      } else {
        scores[i] = tokenAgreement[i] ?? 0;
        sourceCounts[i] = 0;
      }
    }
    trueTokenConfidenceSources = sourceCounts;
    return scores;
  })();
  agreementByService = (() => {
    if (!consensus || !consensus.finalText || results.length === 0) return [];
    const window = 2;
    return results.map((r, idx) => {
      const service = perServiceTokens[idx] || [];
      let matches = 0;
      for (let i = 0; i < consensusTokens.length; i++) {
        const t = consensusTokens[i];
        let matched = false;
        for (let j = Math.max(0, i - window); j <= Math.min(service.length - 1, i + window); j++) {
          if (service[j] === t) {
            matched = true;
            break;
          }
        }
        if (matched) matches++;
      }
      const agreement = consensusTokens.length > 0 ? matches / consensusTokens.length : 0;
      return {
        id: r.id,
        serviceName: r.serviceName,
        agreement
      };
    });
  })();
  contestedTokens = (() => {
    if (!consensus || trueTokenConfidence.length === 0) return [];
    const pairs = consensusTokens.map((tok, i) => ({
      token: tok,
      score: trueTokenConfidence[i] ?? 0
    }));
    const filtered = pairs.filter((p) => p.token && p.token.trim().length > 2);
    return filtered.sort((a, b) => a.score - b.score).slice(0, 10);
  })();
  results.length ? Math.max(...results.map((r) => r.processingTimeMs || 0)) : 0;
  return `    ${hasResults ? `<div class="space-y-8"> <div class="glass-morphism holographic rounded-3xl p-8 border-2 border-neon-cyan/30 shadow-neon-cyan animate-fade-in-up"><h3 class="text-3xl font-bold text-glow-cyan mb-6 text-center animate-neon-flicker" data-svelte-h="svelte-1i129yu">🎯 Processing Summary</h3> <div class="grid grid-cols-1 md:grid-cols-3 gap-6"><div class="text-center glass-morphism rounded-2xl p-6 border border-neon-cyan/20"><div class="text-5xl font-black text-glow-cyan animate-bounce-slow">${escape(results.length)}</div> <div class="text-lg text-cyan-300 font-semibold mt-2" data-svelte-h="svelte-65kv9y">🤖 AI Services</div></div> <div class="text-center glass-morphism rounded-2xl p-6 border border-neon-pink/20"><div class="text-5xl font-black text-glow-pink animate-pulse">${escape(formatConfidence(averageConfidence))}</div> <div class="text-lg text-pink-300 font-semibold mt-2" data-svelte-h="svelte-gnnn5m">🎯 Avg Confidence</div></div> <div class="text-center glass-morphism rounded-2xl p-6 border border-neon-purple/20"><div class="text-5xl font-black text-glow-purple animate-float">${escape(formatTime(totalProcessingTime))}</div> <div class="text-lg text-purple-300 font-semibold mt-2" data-svelte-h="svelte-8j946g">⚡ Processing Time</div></div></div>  ${agreementByService.length ? `<div class="mt-8"><h4 class="text-xl font-semibold text-white/90 mb-3" data-svelte-h="svelte-1v5nzxu">Per-service agreement with consensus</h4> <div class="space-y-2">${each(agreementByService, (svc) => {
    return `<div class="flex items-center gap-3"><div class="w-32 text-white/80">${escape(svc.serviceName)}</div> <div class="flex-1 h-3 bg-white/10 rounded"><div class="h-3 rounded bg-gradient-to-r from-neon-cyan to-neon-purple"${add_attribute("style", `width: ${Math.round(svc.agreement * 100)}%`, 0)}></div></div> <div class="w-12 text-right text-white/70">${escape(Math.round(svc.agreement * 100))}%</div> </div>`;
  })}</div></div>` : ``}</div>  <div class="flex space-x-2 glass-morphism rounded-2xl p-2 border border-white/20"><button class="${"flex-1 py-4 px-6 rounded-xl text-lg font-bold transition-all duration-300 " + escape(
    "bg-gradient-to-r from-neon-cyan/20 to-neon-purple/20 text-glow-cyan border-2 border-neon-cyan/50 shadow-neon-cyan",
    true
  )}">🌟 Overview</button> <button class="${"flex-1 py-4 px-6 rounded-xl text-lg font-bold transition-all duration-300 " + escape(
    "text-white/70 hover:text-white hover:bg-white/10",
    true
  )}">🔍 Detailed</button> <button class="${"flex-1 py-4 px-6 rounded-xl text-lg font-bold transition-all duration-300 " + escape(
    "text-white/70 hover:text-white hover:bg-white/10",
    true
  )}">🧠 AI Insights</button></div> ${` ${consensus ? `<div class="glass-morphism holographic rounded-3xl p-8 border-2 border-neon-green/50 shadow-neon-green animate-slide-in-left"><div class="text-center mb-8" data-svelte-h="svelte-4de5hg"><div class="text-8xl mb-4 animate-bounce-slow">🏆</div> <h3 class="text-4xl font-bold text-glow-green animate-neon-flicker">Consensus Transcription</h3></div> <div class="glass-morphism rounded-2xl p-6 border border-white/20 bg-black/20"><div class="flex items-center justify-between mb-3"><div class="text-sm text-white/70 flex items-center gap-3" data-svelte-h="svelte-oso8z7"><span class="inline-flex items-center gap-1"><span class="inline-block w-3 h-3 rounded bg-green-600/60"></span> high confidence</span> <span class="inline-flex items-center gap-1"><span class="inline-block w-3 h-3 rounded bg-yellow-600/60"></span> medium</span> <span class="inline-flex items-center gap-1"><span class="inline-block w-3 h-3 rounded bg-pink-600/60"></span> low/contested</span></div> <label class="text-sm text-white/80 flex items-center gap-2"><input type="checkbox"${add_attribute("checked", showHighlights, 1)}> Show highlights</label></div> ${`<p class="text-xl text-white leading-relaxed font-medium">${each(highlightTokens, (tok, idx) => {
    return `${typeof trueTokenConfidence[idx] === "number" ? `<span${add_attribute("class", tokenClass(trueTokenConfidence[idx]), 0)}${add_attribute(
      "title",
      `token confidence ${(trueTokenConfidence[idx] * 100).toFixed(0)}%${trueTokenConfidenceSources[idx] > 0 ? "" : " (from agreement)"}`,
      0
    )}>${escape(tok)}</span>${escape(idx < highlightTokens.length - 1 ? " " : "")}` : `<span>${escape(tok)}</span>${escape(idx < highlightTokens.length - 1 ? " " : "")}`}`;
  })}</p>`}</div> <div class="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4"><div class="glass-morphism rounded-xl p-4 text-center border border-neon-green/30"><div class="text-2xl font-bold text-glow-green">${escape(formatConfidence(consensus.consensusConfidence))}</div> <div class="text-green-300" data-svelte-h="svelte-pgo6q">Confidence</div></div> <div class="glass-morphism rounded-xl p-4 text-center border border-neon-cyan/30"><div class="text-2xl font-bold text-glow-cyan">${escape(consensus.stats.servicesUsed)}</div> <div class="text-cyan-300" data-svelte-h="svelte-1k1ufhq">Services</div></div> <div class="glass-morphism rounded-xl p-4 text-center border border-neon-pink/30"><div class="text-2xl font-bold text-glow-pink">${escape(consensus.stats.disagreementCount)}</div> <div class="text-pink-300" data-svelte-h="svelte-1s328ks">Disagreements</div></div></div>  ${contestedTokens.length ? `<div class="mt-6"><h4 class="text-lg font-semibold text-white/90 mb-2" data-svelte-h="svelte-g1mnyd">Most contested terms</h4> <div class="flex flex-wrap gap-2">${each(contestedTokens, (ct) => {
    return `<span class="px-2 py-1 rounded bg-pink-700/30 text-white/90 text-sm">${escape(ct.token)} <span class="text-white/60">(${escape(Math.round((ct.score || 0) * 100))}%)</span></span>`;
  })}</div></div>` : ``}  <div class="mt-6"><label class="text-sm text-white/80 flex items-center gap-2"><input type="checkbox"${add_attribute("checked", showRawJson, 1)}> Show raw JSON</label> ${``}</div></div>` : `<div class="text-center py-16 glass-morphism rounded-3xl border-2 border-white/20 animate-fade-in-up" data-svelte-h="svelte-84djkx"><div class="text-8xl mb-6 animate-float">🔮</div> <h3 class="text-3xl font-bold text-glow-purple mb-4 animate-neon-flicker">Building Consensus...</h3> <p class="text-xl text-white/80">AI services are analyzing and comparing results ✨</p></div>`}`} ${``} ${``}</div>` : `<div class="text-center py-16 glass-morphism rounded-3xl border-2 border-white/20 animate-fade-in-up" data-svelte-h="svelte-a5d488"><div class="text-8xl mb-6 animate-float">🎵</div> <h3 class="text-3xl font-bold text-glow-cyan mb-4 animate-neon-flicker">Ready for Audio Magic</h3> <p class="text-xl text-white/80">Upload an audio file above to see the AI transcription results here ✨</p></div>`} `;
});
const css$1 = {
  code: "@keyframes svelte-162s0hu-shimmer{0%{transform:translateX(-100%)}100%{transform:translateX(100%)}}.animate-shimmer.svelte-162s0hu{animation:svelte-162s0hu-shimmer 2s ease-in-out infinite}",
  map: `{"version":3,"file":"ProgressBar.svelte","sources":["ProgressBar.svelte"],"sourcesContent":["<script lang=\\"ts\\">export let progress = 0;\\nexport let showPercentage = true;\\nexport let color = \\"blue\\";\\nexport const height = \\"h-2\\";\\n$: clampedProgress = Math.max(0, Math.min(100, progress));\\n$: progressWidth = \`\${clampedProgress}%\`;\\nconst colorClasses = {\\n  blue: \\"bg-blue-600\\",\\n  green: \\"bg-green-600\\",\\n  yellow: \\"bg-yellow-600\\",\\n  red: \\"bg-red-600\\",\\n  purple: \\"bg-purple-600\\"\\n};\\n$: bgColorClass = colorClasses[color] || colorClasses.blue;\\nfunction getStatusText(progress2) {\\n  if (progress2 < 25) return \\"Starting...\\";\\n  if (progress2 < 50) return \\"Processing...\\";\\n  if (progress2 < 75) return \\"Almost done...\\";\\n  if (progress2 < 100) return \\"Finalizing...\\";\\n  return \\"Complete!\\";\\n}\\n<\/script>\\n\\n<!-- ========= REGENERATION BOUNDARY START: Component Template ========= -->\\n<!-- @phazzie: This section can be regenerated independently -->\\n<!-- @contract: Must render the progress bar UI -->\\n<!-- @dependencies: Computed values and helper functions -->\\n\\n<div class=\\"w-full\\">\\n  <!-- Enhanced Progress Bar with Neon Effects -->\\n  <div class=\\"relative\\">\\n    <!-- Background Track with Glow -->\\n    <div class=\\"w-full h-6 bg-black/50 rounded-full shadow-inner border-2 border-white/10 overflow-hidden\\">\\n      <!-- Animated Progress Fill -->\\n      <div\\n        class=\\"h-full bg-gradient-to-r from-neon-cyan via-neon-pink to-neon-purple transition-all duration-500 ease-out rounded-full relative overflow-hidden\\"\\n        style=\\"width: {progressWidth}\\"\\n      >\\n        <!-- Shimmer Effect -->\\n        <div class=\\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-shimmer\\"></div>\\n        \\n        <!-- Pulsing Glow -->\\n        <div class=\\"absolute inset-0 bg-gradient-to-r from-neon-cyan/50 via-neon-pink/50 to-neon-purple/50 animate-glow-pulse rounded-full\\"></div>\\n      </div>\\n      \\n      <!-- Progress Indicator Dot -->\\n      <div \\n        class=\\"absolute top-1/2 transform -translate-y-1/2 w-4 h-4 bg-white rounded-full shadow-neon-cyan border-2 border-neon-cyan animate-bounce-slow\\"\\n        style=\\"left: calc({progressWidth} - 8px); transition: left 0.5s ease-out;\\"\\n      ></div>\\n    </div>\\n    \\n    <!-- Floating Status Particles -->\\n    <div class=\\"absolute -top-2 left-0 w-full h-full pointer-events-none\\">\\n      {#each Array(5) as _, i}\\n        <div \\n          class=\\"absolute w-1 h-1 bg-neon-cyan rounded-full animate-float opacity-60\\"\\n          style=\\"left: {(clampedProgress / 100) * 80 + Math.random() * 20}%; animation-delay: {i * 0.3}s; animation-duration: {2 + Math.random()}s;\\"\\n        ></div>\\n      {/each}\\n    </div>\\n  </div>\\n\\n  <!-- Enhanced Progress Text with Glowing Effects -->\\n  {#if showPercentage}\\n    <div class=\\"flex justify-between items-center mt-6\\">\\n      <div class=\\"glass-morphism rounded-xl px-4 py-2 border border-neon-cyan/30\\">\\n        <span class=\\"text-xl font-bold text-glow-cyan animate-neon-flicker\\">\\n          {getStatusText(clampedProgress)}\\n        </span>\\n      </div>\\n      \\n      <div class=\\"glass-morphism rounded-xl px-4 py-2 border border-neon-purple/30\\">\\n        <span class=\\"text-2xl font-black text-glow-purple\\">\\n          {clampedProgress}%\\n        </span>\\n      </div>\\n    </div>\\n    \\n    <!-- Progress Milestones -->\\n    <div class=\\"flex justify-between mt-4 text-sm\\">\\n      <span class=\\"text-white/60 {clampedProgress >= 25 ? 'text-neon-green font-bold' : ''}\\">\\n        🚀 Starting\\n      </span>\\n      <span class=\\"text-white/60 {clampedProgress >= 50 ? 'text-neon-cyan font-bold' : ''}\\">\\n        🧠 Processing\\n      </span>\\n      <span class=\\"text-white/60 {clampedProgress >= 75 ? 'text-neon-pink font-bold' : ''}\\">\\n        ⚡ Finalizing\\n      </span>\\n      <span class=\\"text-white/60 {clampedProgress >= 100 ? 'text-neon-purple font-bold animate-bounce' : ''}\\">\\n        ✨ Complete\\n      </span>\\n    </div>\\n  {/if}\\n</div>\\n\\n<style>\\n  @keyframes shimmer {\\n    0% { transform: translateX(-100%); }\\n    100% { transform: translateX(100%); }\\n  }\\n  \\n  .animate-shimmer {\\n    animation: shimmer 2s ease-in-out infinite;\\n  }\\n</style>\\n\\n<!-- ========= REGENERATION BOUNDARY END: Component Template ========= -->\\n"],"names":[],"mappings":"AAkGE,WAAW,sBAAQ,CACjB,EAAG,CAAE,SAAS,CAAE,WAAW,KAAK,CAAG,CACnC,IAAK,CAAE,SAAS,CAAE,WAAW,IAAI,CAAG,CACtC,CAEA,+BAAiB,CACf,SAAS,CAAE,sBAAO,CAAC,EAAE,CAAC,WAAW,CAAC,QACpC"}`
};
function getStatusText(progress2) {
  if (progress2 < 25) return "Starting...";
  if (progress2 < 50) return "Processing...";
  if (progress2 < 75) return "Almost done...";
  if (progress2 < 100) return "Finalizing...";
  return "Complete!";
}
const ProgressBar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let clampedProgress;
  let progressWidth;
  let { progress = 0 } = $$props;
  let { showPercentage = true } = $$props;
  let { color = "blue" } = $$props;
  const height = "h-2";
  if ($$props.progress === void 0 && $$bindings.progress && progress !== void 0) $$bindings.progress(progress);
  if ($$props.showPercentage === void 0 && $$bindings.showPercentage && showPercentage !== void 0) $$bindings.showPercentage(showPercentage);
  if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
  $$result.css.add(css$1);
  clampedProgress = Math.max(0, Math.min(100, progress));
  progressWidth = `${clampedProgress}%`;
  return `    <div class="w-full"> <div class="relative"> <div class="w-full h-6 bg-black/50 rounded-full shadow-inner border-2 border-white/10 overflow-hidden"> <div class="h-full bg-gradient-to-r from-neon-cyan via-neon-pink to-neon-purple transition-all duration-500 ease-out rounded-full relative overflow-hidden" style="${"width: " + escape(progressWidth, true)}"> <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent animate-shimmer svelte-162s0hu"></div>  <div class="absolute inset-0 bg-gradient-to-r from-neon-cyan/50 via-neon-pink/50 to-neon-purple/50 animate-glow-pulse rounded-full"></div></div>  <div class="absolute top-1/2 transform -translate-y-1/2 w-4 h-4 bg-white rounded-full shadow-neon-cyan border-2 border-neon-cyan animate-bounce-slow" style="${"left: calc(" + escape(progressWidth, true) + " - 8px); transition: left 0.5s ease-out;"}"></div></div>  <div class="absolute -top-2 left-0 w-full h-full pointer-events-none">${each(Array(5), (_, i) => {
    return `<div class="absolute w-1 h-1 bg-neon-cyan rounded-full animate-float opacity-60" style="${"left: " + escape(clampedProgress / 100 * 80 + Math.random() * 20, true) + "%; animation-delay: " + escape(i * 0.3, true) + "s; animation-duration: " + escape(2 + Math.random(), true) + "s;"}"></div>`;
  })}</div></div>  ${showPercentage ? `<div class="flex justify-between items-center mt-6"><div class="glass-morphism rounded-xl px-4 py-2 border border-neon-cyan/30"><span class="text-xl font-bold text-glow-cyan animate-neon-flicker">${escape(getStatusText(clampedProgress))}</span></div> <div class="glass-morphism rounded-xl px-4 py-2 border border-neon-purple/30"><span class="text-2xl font-black text-glow-purple">${escape(clampedProgress)}%</span></div></div>  <div class="flex justify-between mt-4 text-sm"><span class="${"text-white/60 " + escape(clampedProgress >= 25 ? "text-neon-green font-bold" : "", true)}">🚀 Starting</span> <span class="${"text-white/60 " + escape(clampedProgress >= 50 ? "text-neon-cyan font-bold" : "", true)}">🧠 Processing</span> <span class="${"text-white/60 " + escape(clampedProgress >= 75 ? "text-neon-pink font-bold" : "", true)}">⚡ Finalizing</span> <span class="${"text-white/60 " + escape(
    clampedProgress >= 100 ? "text-neon-purple font-bold animate-bounce" : "",
    true
  )}">✨ Complete</span></div>` : ``}</div>  `;
});
const css = {
  code: ".cyber-grid-bg.svelte-qu0ip0{background-image:linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),\n      linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);background-size:50px 50px;animation:svelte-qu0ip0-grid-move 20s linear infinite}@keyframes svelte-qu0ip0-grid-move{0%{background-position:0 0}100%{background-position:50px 50px}}.glass-morphism.svelte-qu0ip0{backdrop-filter:blur(12px);-webkit-backdrop-filter:blur(12px);background:rgba(255, 255, 255, 0.05);border:1px solid rgba(255, 255, 255, 0.1)}.holographic.svelte-qu0ip0{position:relative;overflow:hidden}.holographic.svelte-qu0ip0::before{content:'';position:absolute;top:0;left:-100%;width:100%;height:100%;background:linear-gradient(\n      90deg,\n      transparent,\n      rgba(0, 255, 255, 0.2),\n      transparent\n    );animation:svelte-qu0ip0-holographic-sweep 3s infinite}@keyframes svelte-qu0ip0-holographic-sweep{0%{left:-100%}100%{left:100%}}.neon-border.svelte-qu0ip0{border:2px solid;-o-border-image:linear-gradient(45deg, #00ffff, #ff00ff, #ffff00, #00ffff) 1;border-image:linear-gradient(45deg, #00ffff, #ff00ff, #ffff00, #00ffff) 1;animation:svelte-qu0ip0-border-glow 2s ease-in-out infinite alternate}@keyframes svelte-qu0ip0-border-glow{from{box-shadow:0 0 10px rgba(0, 255, 255, 0.5)}to{box-shadow:0 0 20px rgba(0, 255, 255, 0.8), 0 0 30px rgba(0, 255, 255, 0.6)}}.text-glow-cyan.svelte-qu0ip0{color:#00ffff;text-shadow:0 0 10px rgba(0, 255, 255, 0.8)}.text-glow-pink.svelte-qu0ip0{color:#ff69b4;text-shadow:0 0 10px rgba(255, 105, 180, 0.8)}.text-glow-purple.svelte-qu0ip0{color:#8b5cf6;text-shadow:0 0 10px rgba(139, 92, 246, 0.8)}.text-glow-green.svelte-qu0ip0{color:#10b981;text-shadow:0 0 10px rgba(16, 185, 129, 0.8)}.btn-cyber.svelte-qu0ip0{background:linear-gradient(45deg, #00ffff, #ff00ff);border:2px solid transparent;background-clip:padding-box;position:relative}.btn-cyber.svelte-qu0ip0:hover{transform:translateY(-2px);box-shadow:0 8px 25px rgba(0, 255, 255, 0.4)}.btn-cyber-secondary.svelte-qu0ip0{background:linear-gradient(45deg, #8b5cf6, #ec4899);border:2px solid transparent;background-clip:padding-box}.btn-cyber-secondary.svelte-qu0ip0:hover{transform:translateY(-2px);box-shadow:0 8px 25px rgba(139, 92, 246, 0.4)}@keyframes svelte-qu0ip0-fadeInUp{from{opacity:0;transform:translateY(30px)}to{opacity:1;transform:translateY(0)}}@keyframes svelte-qu0ip0-slideInLeft{from{opacity:0;transform:translateX(-50px)}to{opacity:1;transform:translateX(0)}}@keyframes svelte-qu0ip0-slideInRight{from{opacity:0;transform:translateX(50px)}to{opacity:1;transform:translateX(0)}}@keyframes svelte-qu0ip0-slideInUp{from{opacity:0;transform:translateY(50px)}to{opacity:1;transform:translateY(0)}}@keyframes svelte-qu0ip0-bounceIn{0%,20%,40%,60%,80%{animation-timing-function:cubic-bezier(0.215, 0.610, 0.355, 1.000)}0%{opacity:0;transform:scale3d(.3, .3, .3)}20%{transform:scale3d(1.1, 1.1, 1.1)}40%{transform:scale3d(.9, .9, .9)}60%{opacity:1;transform:scale3d(1.03, 1.03, 1.03)}80%{transform:scale3d(.97, .97, .97)}100%{opacity:1;transform:scale3d(1, 1, 1)}}.animate-fade-in-up.svelte-qu0ip0{animation:svelte-qu0ip0-fadeInUp 0.6s ease-out}.animate-slide-in-left.svelte-qu0ip0{animation:svelte-qu0ip0-slideInLeft 0.8s ease-out}.animate-slide-in-right.svelte-qu0ip0{animation:svelte-qu0ip0-slideInRight 0.8s ease-out}.animate-slide-in-up.svelte-qu0ip0{animation:svelte-qu0ip0-slideInUp 0.6s ease-out}.animate-glow-pulse.svelte-qu0ip0{animation:svelte-qu0ip0-glow-pulse 2s ease-in-out infinite alternate}@keyframes svelte-qu0ip0-glow-pulse{from{text-shadow:0 0 20px rgba(0, 255, 255, 0.5), 0 0 30px rgba(255, 0, 255, 0.3), 0 0 40px rgba(255, 255, 0, 0.2)}to{text-shadow:0 0 30px rgba(0, 255, 255, 0.8), 0 0 40px rgba(255, 0, 255, 0.6), 0 0 50px rgba(255, 255, 0, 0.4)}}.animate-float.svelte-qu0ip0{animation:svelte-qu0ip0-float 3s ease-in-out infinite}@keyframes svelte-qu0ip0-float{0%,100%{transform:translateY(0px)}50%{transform:translateY(-10px)}}.animate-spin-slow.svelte-qu0ip0{animation:spin 3s linear infinite}.animate-bounce-slow.svelte-qu0ip0{animation:svelte-qu0ip0-bounce-slow 2s ease-in-out infinite}@keyframes svelte-qu0ip0-bounce-slow{0%,100%{transform:translateY(0)}50%{transform:translateY(-5px)}}.animate-neon-flicker.svelte-qu0ip0{animation:svelte-qu0ip0-neon-flicker 1.5s ease-in-out infinite alternate}@keyframes svelte-qu0ip0-neon-flicker{0%,100%{opacity:1;text-shadow:0 0 10px rgba(0, 255, 255, 0.8)}50%{opacity:0.8;text-shadow:0 0 20px rgba(0, 255, 255, 1)}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import FileUpload from \\"$lib/components/FileUpload.svelte\\";\\nimport ResultsDisplay from \\"$lib/components/ResultsDisplay.svelte\\";\\nimport ProgressBar from \\"$lib/components/ProgressBar.svelte\\";\\nimport { chunkAudioFile } from \\"$lib/chunk-audio\\";\\nexport let data;\\nlet audioFileFromUser = null;\\nlet audioUrlOverride = \\"\\";\\nlet useChunking = false;\\nlet chunkProgress = 0;\\nlet isProcessingTranscription = false;\\nlet transcriptionResults = [];\\nlet consensusResult = null;\\nlet uploadProgress = 0;\\nlet errorMessage = \\"\\";\\nlet showResults = false;\\nlet displayState = \\"upload\\";\\n$: {\\n  if (transcriptionResults.length > 0 && consensusResult) {\\n    showResults = true;\\n    displayState = \\"results\\";\\n  } else if (isProcessingTranscription) {\\n    displayState = \\"processing\\";\\n  } else if (errorMessage) {\\n    displayState = \\"error\\";\\n  } else {\\n    showResults = false;\\n    displayState = \\"upload\\";\\n  }\\n}\\nasync function handleFileUploaded(event) {\\n  console.log(\\"@phazzie-checkpoint-1: File upload event received\\");\\n  try {\\n    const uploadedFile = event.detail.file;\\n    audioFileFromUser = uploadedFile;\\n    console.log(\\"@phazzie-checkpoint-2: File stored in state\\");\\n    console.log(\\"@phazzie-checkpoint-3: Ready for transcription processing\\");\\n    errorMessage = \\"\\";\\n  } catch (error) {\\n    console.error(\\"@phazzie-error: File upload handling failed\\");\\n    errorMessage = \\"Unable to process the uploaded file. Please try uploading a different audio file.\\";\\n    console.error(error);\\n  }\\n}\\nasync function startTranscriptionProcess() {\\n  console.log(\\"@phazzie-checkpoint-4: Starting transcription process\\");\\n  if (!audioFileFromUser && !audioUrlOverride) {\\n    errorMessage = \\"No file selected or URL provided\\";\\n    return;\\n  }\\n  try {\\n    isProcessingTranscription = true;\\n    uploadProgress = 0;\\n    console.log(\\"@phazzie-checkpoint-5: Sending file to API\\");\\n    uploadProgress = 10;\\n    const formData = new FormData();\\n    if (audioUrlOverride) {\\n      formData.append(\\"audioUrl\\", audioUrlOverride.trim());\\n    } else if (audioFileFromUser) {\\n      formData.append(\\"audio\\", audioFileFromUser);\\n    }\\n    formData.append(\\"csrfToken\\", data?.csrfToken ?? \\"\\");\\n    console.log(\\"@phazzie-debug: About to make fetch request\\");\\n    uploadProgress = 30;\\n    let response;\\n    if (useChunking && audioFileFromUser && !audioUrlOverride) {\\n      const chunks = await chunkAudioFile(audioFileFromUser, { targetBytes: 4 * 1024 * 1024, minSeconds: 10 });\\n      const chunkTexts = [];\\n      for (let i = 0; i < chunks.length; i++) {\\n        const fd = new FormData();\\n        fd.append(\\"audio\\", chunks[i]);\\n        fd.append(\\"csrfToken\\", data?.csrfToken ?? \\"\\");\\n        const r = await fetch(\\"/api/transcribe\\", { method: \\"POST\\", body: fd });\\n        if (!r.ok) {\\n          const t = await r.text();\\n          throw new Error(\`Chunk \${i + 1}/\${chunks.length} failed: \${r.status} \${t}\`);\\n        }\\n        const result2 = await r.json();\\n        const textsByService = {};\\n        (result2?.individualResults || []).forEach((svc) => {\\n          textsByService[svc.serviceName] = svc.text || \\"\\";\\n        });\\n        chunkTexts.push({ index: i, textsByService });\\n        chunkProgress = Math.round((i + 1) / chunks.length * 100);\\n      }\\n      const mergeResp = await fetch(\\"/api/merge-chunks\\", {\\n        method: \\"POST\\",\\n        headers: { \\"Content-Type\\": \\"application/json\\" },\\n        body: JSON.stringify({ csrfToken: data?.csrfToken ?? \\"\\", chunkTexts })\\n      });\\n      response = mergeResp;\\n    } else {\\n      response = await fetch(\\"/api/transcribe\\", { method: \\"POST\\", body: formData });\\n    }\\n    console.log(\\"@phazzie-debug: Fetch request completed\\", response.status);\\n    uploadProgress = 60;\\n    if (!response.ok) {\\n      const errorText = await response.text();\\n      console.error(\\"@phazzie-debug: Response not OK\\", response.status, errorText);\\n      throw new Error(\`API call failed: \${response.status} - \${errorText}\`);\\n    }\\n    uploadProgress = 80;\\n    const result = await response.json();\\n    console.log(\\"@phazzie-debug: API response received:\\", result);\\n    console.log(\\"@phazzie-debug: Type of result:\\", typeof result);\\n    console.log(\\"@phazzie-debug: Keys in result:\\", Object.keys(result || {}));\\n    console.log(\\"@phazzie-debug: result.finalText exists?\\", !!result?.finalText);\\n    if (result && result.finalText) {\\n      console.log(\\"@phazzie-debug: Consensus data:\\", result);\\n      transcriptionResults = result.individualResults || [];\\n      consensusResult = result;\\n      showResults = true;\\n      displayState = \\"results\\";\\n      console.log(\\"@phazzie-debug: Set transcriptionResults length:\\", transcriptionResults.length);\\n      console.log(\\"@phazzie-debug: Set consensusResult:\\", !!consensusResult);\\n      console.log(\\"@phazzie-debug: Set showResults:\\", showResults);\\n      console.log(\\"@phazzie-debug: Set displayState:\\", displayState);\\n    } else {\\n      console.log(\\"@phazzie-debug: No results in API response\\");\\n      console.log(\\"@phazzie-debug: result.finalText value:\\", result?.finalText);\\n      transcriptionResults = [];\\n      consensusResult = null;\\n      showResults = false;\\n      displayState = \\"error\\";\\n    }\\n    console.log(\\"@phazzie-debug: Final transcriptionResults:\\", transcriptionResults);\\n    console.log(\\"@phazzie-debug: Final consensusResult:\\", consensusResult);\\n    uploadProgress = 100;\\n    console.log(\\"@phazzie-checkpoint-6: Transcription completed successfully\\");\\n  } catch (error) {\\n    console.error(\\"@phazzie-error: Transcription processing failed\\");\\n    console.error(\\"@phazzie-debug: Full error details:\\", error);\\n    if (error instanceof TypeError && error.message.includes(\\"fetch\\")) {\\n      errorMessage = \\"Network error: Unable to connect to the transcription service. Please check your internet connection.\\";\\n    } else if (error instanceof Error && error.message.includes(\\"API call failed\\")) {\\n      errorMessage = \`Server error: \${error.message}\`;\\n    } else {\\n      errorMessage = \\"Unable to process audio file. Please check your internet connection and try again.\\";\\n    }\\n    console.error(error);\\n  } finally {\\n    isProcessingTranscription = false;\\n  }\\n}\\n<\/script>\\n\\n<!-- ========= REGENERATION BOUNDARY START: UI Template ========= -->\\n<!-- @phazzie: This section can be regenerated independently -->\\n<!-- @contract: Must render the main application UI -->\\n<!-- @dependencies: State variables and event handlers -->\\n\\n<!-- Subtle Animated Background Particles -->\\n<div class=\\"particle-container\\">\\n  {#each Array(12) as _, i}\\n    <div \\n      class=\\"particle\\" \\n      style=\\"left: {Math.random() * 100}%; animation-delay: {Math.random() * 12}s; animation-duration: {12 + Math.random() * 6}s;\\"\\n    ></div>\\n  {/each}\\n</div>\\n\\n<main class=\\"min-h-screen relative cyber-grid-bg\\">\\n  <!-- Clean Gradient Overlay -->\\n  <div class=\\"absolute inset-0 bg-gradient-to-br from-slate-900/40 via-blue-900/30 to-indigo-900/40\\"></div>\\n  \\n  <div class=\\"relative z-10 max-w-6xl mx-auto px-4 py-12\\">\\n\\n    <!-- Header Section with Massive Glow Effects -->\\n    <div class=\\"text-center mb-16 animate-fade-in-up\\">\\n      <h1 class=\\"text-7xl lg:text-8xl font-black text-transparent bg-clip-text bg-gradient-to-r from-neon-cyan via-neon-pink to-neon-purple mb-6 animate-glow-pulse\\">\\n        🎵 YaHeard 🎵\\n      </h1>\\n      <h2 class=\\"text-4xl lg:text-5xl font-bold text-glow-cyan mb-4 animate-neon-flicker\\">\\n        Multi-AI Transcription Engine\\n      </h2>\\n      <p class=\\"text-2xl text-white/90 drop-shadow-2xl animate-float max-w-3xl mx-auto leading-relaxed\\">\\n        ✨ Upload audio files and get <span class=\\"text-glow-pink font-bold\\">consensus transcriptions</span> from multiple AI services ✨\\n      </p>\\n      \\n      <!-- Decorative Elements -->\\n      <div class=\\"flex justify-center space-x-8 mt-8\\">\\n        <div class=\\"w-4 h-4 bg-neon-cyan rounded-full animate-ping shadow-neon-cyan\\"></div>\\n        <div class=\\"w-4 h-4 bg-neon-pink rounded-full animate-ping shadow-neon-pink\\" style=\\"animation-delay: 0.5s\\"></div>\\n        <div class=\\"w-4 h-4 bg-neon-purple rounded-full animate-ping shadow-neon-purple\\" style=\\"animation-delay: 1s\\"></div>\\n      </div>\\n    </div>\\n    \\n    <!-- Debug Info (remove in production) -->\\n        <!-- Debug Info - Always show for now to diagnose issue -->\\n        <!-- Debug Info - Shows current state for troubleshooting -->\\n    <div class=\\"mb-4 p-4 bg-black/50 rounded text-sm text-white/70\\">\\n      Debug: displayState = {displayState}, \\n      transcriptionResults.length = {transcriptionResults.length}, \\n      consensusResult = {consensusResult ? 'exists' : 'null'}, \\n      isProcessing = {isProcessingTranscription},\\n      audioFile = {audioFileFromUser ? audioFileFromUser.name : 'none'}\\n    </div>\\n\\n    <!-- CLEAN STATE-DRIVEN UI DESIGN -->\\n    \\n    {#if displayState === 'upload'}\\n      <!-- UPLOAD STATE: File selection and ready-to-process -->\\n      <div class=\\"space-y-8\\">\\n        <!-- File Upload Section -->\\n        <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-white/20 hover:border-neon-cyan/50 transition-all duration-500 transform hover:scale-[1.02] animate-slide-in-left\\">\\n          <div class=\\"flex items-center space-x-4 mb-8\\">\\n            <div class=\\"text-6xl animate-bounce-slow\\">🎤</div>\\n            <div>\\n              <h2 class=\\"text-4xl font-bold text-glow-cyan mb-2\\">Upload Audio File</h2>\\n              <p class=\\"text-xl text-white/80\\">Drag & drop or click to select your audio masterpiece</p>\\n            </div>\\n          </div>\\n\\n          <FileUpload\\n            on:fileUploaded={handleFileUploaded}\\n            disabled={isProcessingTranscription}\\n          />\\n\\n          {#if audioFileFromUser}\\n            <div class=\\"mt-8 p-6 glass-morphism rounded-2xl border-2 border-neon-green/50 shadow-neon-green animate-fade-in-up\\">\\n              <div class=\\"flex items-center space-x-4\\">\\n                <div class=\\"text-4xl animate-spin-slow\\">💾</div>\\n                <div>\\n                  <p class=\\"text-2xl font-bold text-glow-green\\">✅ File Locked & Loaded!</p>\\n                  <p class=\\"text-lg text-green-300\\">\\n                    📁 {audioFileFromUser.name} \\n                    <span class=\\"text-neon-cyan\\">({(audioFileFromUser.size / 1024 / 1024).toFixed(2)} MB)</span>\\n                  </p>\\n                </div>\\n              </div>\\n            </div>\\n          {/if}\\n\\n          <!-- Optional: URL override to bypass upload limits on hosting providers -->\\n          <div class=\\"mt-6 glass-morphism rounded-2xl p-6 border border-white/20\\">\\n            <label class=\\"block text-white/80 text-sm mb-2\\" for=\\"audio-url\\">Or paste a public audio URL (bypasses upload size limits)</label>\\n            <input\\n              id=\\"audio-url\\"\\n              type=\\"url\\"\\n              placeholder=\\"https://example.com/path/to/your-audio-file.mp3\\"\\n              class=\\"w-full px-4 py-3 rounded-xl bg-black/40 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-neon-cyan\\"\\n              bind:value={audioUrlOverride}\\n            />\\n            <p class=\\"text-xs text-white/60 mt-2\\">Tip: Host the file on a public URL (S3, Dropbox direct link, etc.). We'll fetch it server-side. On serverless hosts (e.g., Vercel), uploads larger than ~4.5MB will fail—use this URL option for big files.</p>\\n          </div>\\n        </div>\\n\\n        <!-- Ready to Process Section -->\\n        {#if audioFileFromUser}\\n          <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-white/20 hover:border-neon-purple/50 transition-all duration-500 animate-slide-in-right\\">\\n            <div class=\\"text-center\\">\\n              <div class=\\"text-8xl mb-6 animate-float\\">🚀</div>\\n              <h2 class=\\"text-4xl font-bold text-glow-purple mb-6\\">Ready for Liftoff!</h2>\\n              \\n              <button\\n                on:click={startTranscriptionProcess}\\n                class=\\"btn-cyber text-white font-bold py-6 px-12 rounded-2xl text-2xl transform transition-all duration-300 shadow-2xl relative z-10\\"\\n                disabled={isProcessingTranscription}\\n              >\\n                <span class=\\"relative z-10\\">🌟 PROCESS WITH AI MAGIC 🌟</span>\\n              </button>\\n              <div class=\\"flex items-center justify-center gap-3 mt-4 text-white/80 text-sm\\">\\n                <label class=\\"flex items-center gap-2\\"><input type=\\"checkbox\\" bind:checked={useChunking} /> Split large file into chunks (4MB target)</label>\\n              </div>\\n              \\n              <p class=\\"text-lg text-white/70 mt-4 animate-pulse\\">\\n                Powered by Whisper • AssemblyAI • Deepgram • Gemini • ElevenLabs\\n              </p>\\n            </div>\\n          </div>\\n        {/if}\\n      </div>\\n\\n    {:else if displayState === 'processing'}\\n      <!-- PROCESSING STATE: Progress and AI status -->\\n      <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-yellow/50 shadow-neon-cyan animate-slide-in-up\\">\\n        <div class=\\"text-center\\">\\n          <div class=\\"text-8xl mb-6 animate-spin-slow\\">⚡</div>\\n          <h2 class=\\"text-4xl font-bold text-glow-cyan mb-8\\">AI Minds Collaborating...</h2>\\n\\n          <ProgressBar progress={uploadProgress} />\\n          {#if useChunking}\\n            <div class=\\"mt-2 text-white/70 text-sm\\">Chunk progress: {chunkProgress}%</div>\\n          {/if}\\n\\n          <div class=\\"mt-8 space-y-4\\">\\n            <p class=\\"text-xl text-white/90\\">Processing your audio with 5 AI services...</p>\\n            <div class=\\"flex justify-center space-x-4 text-sm\\">\\n              <span class=\\"px-3 py-1 bg-blue-500/20 rounded-full animate-pulse\\">🤖 Whisper</span>\\n              <span class=\\"px-3 py-1 bg-green-500/20 rounded-full animate-pulse\\" style=\\"animation-delay: 0.5s\\">🤖 AssemblyAI</span>\\n              <span class=\\"px-3 py-1 bg-purple-500/20 rounded-full animate-pulse\\" style=\\"animation-delay: 1s\\">🤖 Deepgram</span>\\n              <span class=\\"px-3 py-1 bg-pink-500/20 rounded-full animate-pulse\\" style=\\"animation-delay: 1.5s\\">🤖 Gemini</span>\\n              <span class=\\"px-3 py-1 bg-orange-500/20 rounded-full animate-pulse\\" style=\\"animation-delay: 2s\\">🤖 ElevenLabs</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    {:else if displayState === 'results'}\\n      <!-- RESULTS STATE: Clean transcription display -->\\n      <div class=\\"space-y-8 animate-slide-in-up\\">\\n        <!-- Success Header -->\\n        <div class=\\"text-center\\">\\n          <div class=\\"text-8xl mb-4 animate-bounce-slow\\">🎯</div>\\n          <h2 class=\\"text-4xl font-bold text-glow-green mb-4\\">Transcription Complete!</h2>\\n          <p class=\\"text-xl text-white/80\\">\\n            AI Consensus: <span class=\\"text-glow-cyan font-bold\\">{Math.round((consensusResult?.consensusConfidence || 0) * 100)}%</span>\\n          </p>\\n        </div>\\n\\n        <!-- Main Results Display -->\\n        <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-green/50 shadow-neon-green\\">\\n          <ResultsDisplay results={transcriptionResults} consensus={consensusResult} />\\n          \\n          <!-- Action Buttons -->\\n          <div class=\\"flex justify-center space-x-6 mt-8\\">\\n            <button \\n              on:click={() => {\\n                // Reload to obtain a fresh CSRF token for the next submission\\n                window.location.reload();\\n              }}\\n              class=\\"btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg\\"\\n            >\\n              🔄 Process Another File\\n            </button>\\n            \\n            <button \\n              on:click={() => {\\n                const text = consensusResult?.finalText || '';\\n                navigator.clipboard.writeText(text);\\n              }}\\n              class=\\"btn-cyber-secondary text-white font-bold py-4 px-8 rounded-xl text-lg\\"\\n            >\\n              📋 Copy Text\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    {:else if displayState === 'error'}\\n      <!-- ERROR STATE: Clear error message and retry -->\\n      <div class=\\"glass-morphism neon-border rounded-3xl p-10 border-red-500 bg-red-500/10 animate-slide-in-up\\">\\n        <div class=\\"text-center space-y-6\\">\\n          <div class=\\"text-8xl animate-bounce\\">⚠️</div>\\n          <div>\\n            <h2 class=\\"text-4xl font-bold text-red-400 mb-4\\">Processing Failed</h2>\\n            <p class=\\"text-xl text-red-300\\">{errorMessage}</p>\\n          </div>\\n          \\n          <button \\n            on:click={() => {\\n              // Reset to upload state\\n              displayState = 'upload';\\n              errorMessage = '';\\n              isProcessingTranscription = false;\\n            }}\\n            class=\\"btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg\\"\\n          >\\n            🔄 Try Again\\n          </button>\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- Error Display with Neon Styling -->\\n    {#if displayState === 'error' && errorMessage}\\n      <div class=\\"glass-morphism neon-border rounded-2xl p-6 mb-8 border-red-500 bg-red-500/10 animate-slide-in-left\\">\\n        <div class=\\"flex items-center space-x-3\\">\\n          <div class=\\"text-4xl animate-bounce\\">⚠️</div>\\n          <div>\\n            <strong class=\\"text-red-400 text-xl\\">System Alert:</strong>\\n            <p class=\\"text-red-300 text-lg mt-1\\">{errorMessage}</p>\\n          </div>\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- File Upload Section - Only show in upload state -->\\n    {#if displayState === 'upload'}\\n    <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 mb-12 border-2 border-white/20 hover:border-neon-cyan/50 transition-all duration-500 transform hover:scale-[1.02] animate-slide-in-left\\">\\n      <div class=\\"flex items-center space-x-4 mb-8\\">\\n        <div class=\\"text-6xl animate-bounce-slow\\">🎤</div>\\n        <div>\\n          <h2 class=\\"text-4xl font-bold text-glow-cyan mb-2\\">Upload Audio File</h2>\\n          <p class=\\"text-xl text-white/80\\">Drag & drop or click to select your audio masterpiece</p>\\n        </div>\\n      </div>\\n\\n      <FileUpload\\n        on:fileUploaded={handleFileUploaded}\\n        disabled={isProcessingTranscription}\\n      />\\n\\n      {#if audioFileFromUser}\\n        <div class=\\"mt-8 p-6 glass-morphism rounded-2xl border-2 border-neon-green/50 shadow-neon-green animate-fade-in-up\\">\\n          <div class=\\"flex items-center space-x-4\\">\\n            <div class=\\"text-4xl animate-spin-slow\\">💾</div>\\n            <div>\\n              <p class=\\"text-2xl font-bold text-glow-green\\">\\n                ✅ File Locked & Loaded!\\n              </p>\\n              <p class=\\"text-lg text-green-300\\">\\n                📁 {audioFileFromUser.name} \\n                <span class=\\"text-neon-cyan\\">({(audioFileFromUser.size / 1024 / 1024).toFixed(2)} MB)</span>\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      {/if}\\n    </div>\\n    {/if} <!-- End of upload section -->\\n\\n    <!-- Ready to Process Section - Show when file uploaded but not processing -->\\n    {#if audioFileFromUser && displayState === 'upload'}\\n      <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 mb-12 border-2 border-white/20 hover:border-neon-purple/50 transition-all duration-500 animate-slide-in-right\\">\\n        <div class=\\"text-center\\">\\n          <div class=\\"text-8xl mb-6 animate-float\\">🚀</div>\\n          <h2 class=\\"text-4xl font-bold text-glow-purple mb-6\\">Ready for Liftoff!</h2>\\n          \\n          <button\\n            on:click={startTranscriptionProcess}\\n            class=\\"btn-cyber text-white font-bold py-6 px-12 rounded-2xl text-2xl transform transition-all duration-300 shadow-2xl relative z-10\\"\\n            disabled={isProcessingTranscription}\\n          >\\n            <span class=\\"relative z-10\\">🌟 PROCESS WITH AI MAGIC 🌟</span>\\n          </button>\\n          \\n          <p class=\\"text-lg text-white/70 mt-4 animate-pulse\\">\\n            Powered by Whisper • AssemblyAI • Deepgram • Gemini • ElevenLabs\\n          </p>\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- Processing Section - Only show when processing -->\\n    {#if displayState === 'processing'}\\n      <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 mb-12 border-2 border-neon-yellow/50 shadow-neon-cyan animate-slide-in-left\\">\\n        <div class=\\"text-center\\">\\n          <div class=\\"text-8xl mb-6 animate-spin-slow\\">⚡</div>\\n          <h2 class=\\"text-4xl font-bold text-glow-cyan mb-8\\">AI Brains Working...</h2>\\n\\n          <ProgressBar progress={uploadProgress} />\\n\\n          <p class=\\"text-lg text-white/60 mt-6 animate-pulse\\">\\n            🤖 Whisper analyzing... 🤖 AssemblyAI thinking... 🤖 Multiple AI minds collaborating...\\n          </p>\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- Results Section with Spectacular Effects -->\\n    {#if transcriptionResults.length > 0}\\n      <!-- Results Page Header -->\\n      <div class=\\"text-center mb-12 animate-fade-in-up\\">\\n        <div class=\\"text-9xl mb-6 animate-bounce-slow\\">🎯</div>\\n        <h1 class=\\"text-6xl font-bold text-glow-green mb-4\\">AI Transcription Complete!</h1>\\n        <p class=\\"text-2xl text-white/80 mb-2\\">Multi-AI Consensus Analysis</p>\\n        <p class=\\"text-lg text-neon-cyan\\">\\n          📁 {audioFileFromUser?.name || 'Audio File'} \\n          {#if audioFileFromUser}\\n            <span class=\\"text-white/60\\">({(audioFileFromUser.size / 1024 / 1024).toFixed(2)} MB)</span>\\n          {/if}\\n        </p>\\n      </div>\\n\\n      <!-- Main Results Display -->\\n      <div class=\\"glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-green/50 shadow-neon-green animate-slide-in-right\\">\\n        <ResultsDisplay results={transcriptionResults} consensus={consensusResult} />\\n        \\n        <!-- Action Buttons -->\\n        <div class=\\"flex justify-center space-x-6 mt-8\\">\\n          <button \\n            on:click={() => window.location.reload()}\\n            class=\\"btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg\\"\\n          >\\n            🔄 Process Another File\\n          </button>\\n          \\n          <button \\n            on:click={() => {\\n              const text = consensusResult?.finalText || '';\\n              navigator.clipboard.writeText(text);\\n            }}\\n            class=\\"btn-cyber-secondary text-white font-bold py-4 px-8 rounded-xl text-lg\\"\\n          >\\n            📋 Copy Text\\n          </button>\\n        </div>\\n      </div>\\n    {/if}\\n\\n  </div>\\n</main>\\n\\n<style>\\n  /* Enhanced Cyber Theme Styles */\\n  .cyber-grid-bg {\\n    background-image: \\n      linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),\\n      linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);\\n    background-size: 50px 50px;\\n    animation: grid-move 20s linear infinite;\\n  }\\n\\n  @keyframes grid-move {\\n    0% { background-position: 0 0; }\\n    100% { background-position: 50px 50px; }\\n  }\\n\\n  .glass-morphism {\\n    backdrop-filter: blur(12px);\\n    -webkit-backdrop-filter: blur(12px);\\n    background: rgba(255, 255, 255, 0.05);\\n    border: 1px solid rgba(255, 255, 255, 0.1);\\n  }\\n\\n  .holographic {\\n    position: relative;\\n    overflow: hidden;\\n  }\\n\\n  .holographic::before {\\n    content: '';\\n    position: absolute;\\n    top: 0;\\n    left: -100%;\\n    width: 100%;\\n    height: 100%;\\n    background: linear-gradient(\\n      90deg,\\n      transparent,\\n      rgba(0, 255, 255, 0.2),\\n      transparent\\n    );\\n    animation: holographic-sweep 3s infinite;\\n  }\\n\\n  @keyframes holographic-sweep {\\n    0% { left: -100%; }\\n    100% { left: 100%; }\\n  }\\n\\n  .neon-border {\\n    border: 2px solid;\\n    -o-border-image: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00, #00ffff) 1;\\n       border-image: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00, #00ffff) 1;\\n    animation: border-glow 2s ease-in-out infinite alternate;\\n  }\\n\\n  @keyframes border-glow {\\n    from { box-shadow: 0 0 10px rgba(0, 255, 255, 0.5); }\\n    to { box-shadow: 0 0 20px rgba(0, 255, 255, 0.8), 0 0 30px rgba(0, 255, 255, 0.6); }\\n  }\\n\\n  .text-glow-cyan {\\n    color: #00ffff;\\n    text-shadow: 0 0 10px rgba(0, 255, 255, 0.8);\\n  }\\n\\n  .text-glow-pink {\\n    color: #ff69b4;\\n    text-shadow: 0 0 10px rgba(255, 105, 180, 0.8);\\n  }\\n\\n  .text-glow-purple {\\n    color: #8b5cf6;\\n    text-shadow: 0 0 10px rgba(139, 92, 246, 0.8);\\n  }\\n\\n  .text-glow-green {\\n    color: #10b981;\\n    text-shadow: 0 0 10px rgba(16, 185, 129, 0.8);\\n  }\\n\\n  .btn-cyber {\\n    background: linear-gradient(45deg, #00ffff, #ff00ff);\\n    border: 2px solid transparent;\\n    background-clip: padding-box;\\n    position: relative;\\n  }\\n\\n  .btn-cyber:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 8px 25px rgba(0, 255, 255, 0.4);\\n  }\\n\\n  .btn-cyber-secondary {\\n    background: linear-gradient(45deg, #8b5cf6, #ec4899);\\n    border: 2px solid transparent;\\n    background-clip: padding-box;\\n  }\\n\\n  .btn-cyber-secondary:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 8px 25px rgba(139, 92, 246, 0.4);\\n  }\\n\\n  /* Animations */\\n  @keyframes fadeInUp {\\n    from {\\n      opacity: 0;\\n      transform: translateY(30px);\\n    }\\n    to {\\n      opacity: 1;\\n      transform: translateY(0);\\n    }\\n  }\\n\\n  @keyframes slideInLeft {\\n    from {\\n      opacity: 0;\\n      transform: translateX(-50px);\\n    }\\n    to {\\n      opacity: 1;\\n      transform: translateX(0);\\n    }\\n  }\\n\\n  @keyframes slideInRight {\\n    from {\\n      opacity: 0;\\n      transform: translateX(50px);\\n    }\\n    to {\\n      opacity: 1;\\n      transform: translateX(0);\\n    }\\n  }\\n\\n  @keyframes slideInUp {\\n    from {\\n      opacity: 0;\\n      transform: translateY(50px);\\n    }\\n    to {\\n      opacity: 1;\\n      transform: translateY(0);\\n    }\\n  }\\n\\n  @keyframes bounceIn {\\n    0%, 20%, 40%, 60%, 80% {\\n      animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\\n    }\\n    0% {\\n      opacity: 0;\\n      transform: scale3d(.3, .3, .3);\\n    }\\n    20% {\\n      transform: scale3d(1.1, 1.1, 1.1);\\n    }\\n    40% {\\n      transform: scale3d(.9, .9, .9);\\n    }\\n    60% {\\n      opacity: 1;\\n      transform: scale3d(1.03, 1.03, 1.03);\\n    }\\n    80% {\\n      transform: scale3d(.97, .97, .97);\\n    }\\n    100% {\\n      opacity: 1;\\n      transform: scale3d(1, 1, 1);\\n    }\\n  }\\n\\n  .animate-fade-in-up {\\n    animation: fadeInUp 0.6s ease-out;\\n  }\\n\\n  .animate-slide-in-left {\\n    animation: slideInLeft 0.8s ease-out;\\n  }\\n\\n  .animate-slide-in-right {\\n    animation: slideInRight 0.8s ease-out;\\n  }\\n\\n  .animate-slide-in-up {\\n    animation: slideInUp 0.6s ease-out;\\n  }\\n\\n\\n  .animate-glow-pulse {\\n    animation: glow-pulse 2s ease-in-out infinite alternate;\\n  }\\n\\n  @keyframes glow-pulse {\\n    from {\\n      text-shadow: 0 0 20px rgba(0, 255, 255, 0.5), 0 0 30px rgba(255, 0, 255, 0.3), 0 0 40px rgba(255, 255, 0, 0.2);\\n    }\\n    to {\\n      text-shadow: 0 0 30px rgba(0, 255, 255, 0.8), 0 0 40px rgba(255, 0, 255, 0.6), 0 0 50px rgba(255, 255, 0, 0.4);\\n    }\\n  }\\n\\n  .animate-float {\\n    animation: float 3s ease-in-out infinite;\\n  }\\n\\n  @keyframes float {\\n    0%, 100% { transform: translateY(0px); }\\n    50% { transform: translateY(-10px); }\\n  }\\n\\n  .animate-spin-slow {\\n    animation: spin 3s linear infinite;\\n  }\\n\\n  .animate-bounce-slow {\\n    animation: bounce-slow 2s ease-in-out infinite;\\n  }\\n\\n  @keyframes bounce-slow {\\n    0%, 100% { transform: translateY(0); }\\n    50% { transform: translateY(-5px); }\\n  }\\n\\n\\n  .animate-neon-flicker {\\n    animation: neon-flicker 1.5s ease-in-out infinite alternate;\\n  }\\n\\n  @keyframes neon-flicker {\\n    0%, 100% { \\n      opacity: 1;\\n      text-shadow: 0 0 10px rgba(0, 255, 255, 0.8);\\n    }\\n    50% { \\n      opacity: 0.8;\\n      text-shadow: 0 0 20px rgba(0, 255, 255, 1);\\n    }\\n  }\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  let audioUrlOverride = "";
  let isProcessingTranscription = false;
  let transcriptionResults = [];
  let consensusResult = null;
  let uploadProgress = 0;
  let errorMessage = "";
  let displayState = "upload";
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  {
    {
      if (transcriptionResults.length > 0 && consensusResult) {
        displayState = "results";
      } else {
        displayState = "upload";
      }
    }
  }
  return `     <div class="particle-container">${each(Array(12), (_, i) => {
    return `<div class="particle" style="${"left: " + escape(Math.random() * 100, true) + "%; animation-delay: " + escape(Math.random() * 12, true) + "s; animation-duration: " + escape(12 + Math.random() * 6, true) + "s;"}"></div>`;
  })}</div> <main class="min-h-screen relative cyber-grid-bg svelte-qu0ip0"> <div class="absolute inset-0 bg-gradient-to-br from-slate-900/40 via-blue-900/30 to-indigo-900/40"></div> <div class="relative z-10 max-w-6xl mx-auto px-4 py-12"> <div class="text-center mb-16 animate-fade-in-up svelte-qu0ip0" data-svelte-h="svelte-13oqt58"><h1 class="text-7xl lg:text-8xl font-black text-transparent bg-clip-text bg-gradient-to-r from-neon-cyan via-neon-pink to-neon-purple mb-6 animate-glow-pulse svelte-qu0ip0">🎵 YaHeard 🎵</h1> <h2 class="text-4xl lg:text-5xl font-bold text-glow-cyan mb-4 animate-neon-flicker svelte-qu0ip0">Multi-AI Transcription Engine</h2> <p class="text-2xl text-white/90 drop-shadow-2xl animate-float max-w-3xl mx-auto leading-relaxed svelte-qu0ip0">✨ Upload audio files and get <span class="text-glow-pink font-bold svelte-qu0ip0">consensus transcriptions</span> from multiple AI services ✨</p>  <div class="flex justify-center space-x-8 mt-8"><div class="w-4 h-4 bg-neon-cyan rounded-full animate-ping shadow-neon-cyan"></div> <div class="w-4 h-4 bg-neon-pink rounded-full animate-ping shadow-neon-pink" style="animation-delay: 0.5s"></div> <div class="w-4 h-4 bg-neon-purple rounded-full animate-ping shadow-neon-purple" style="animation-delay: 1s"></div></div></div>    <div class="mb-4 p-4 bg-black/50 rounded text-sm text-white/70">Debug: displayState = ${escape(displayState)}, 
      transcriptionResults.length = ${escape(transcriptionResults.length)}, 
      consensusResult = ${escape("null")}, 
      isProcessing = ${escape(isProcessingTranscription)},
      audioFile = ${escape("none")}</div>  ${displayState === "upload" ? ` <div class="space-y-8"> <div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-white/20 hover:border-neon-cyan/50 transition-all duration-500 transform hover:scale-[1.02] animate-slide-in-left svelte-qu0ip0"><div class="flex items-center space-x-4 mb-8" data-svelte-h="svelte-1mzy5nk"><div class="text-6xl animate-bounce-slow svelte-qu0ip0">🎤</div> <div><h2 class="text-4xl font-bold text-glow-cyan mb-2 svelte-qu0ip0">Upload Audio File</h2> <p class="text-xl text-white/80">Drag &amp; drop or click to select your audio masterpiece</p></div></div> ${validate_component(FileUpload, "FileUpload").$$render($$result, { disabled: isProcessingTranscription }, {}, {})} ${``}  <div class="mt-6 glass-morphism rounded-2xl p-6 border border-white/20 svelte-qu0ip0"><label class="block text-white/80 text-sm mb-2" for="audio-url" data-svelte-h="svelte-1ehn1tg">Or paste a public audio URL (bypasses upload size limits)</label> <input id="audio-url" type="url" placeholder="https://example.com/path/to/your-audio-file.mp3" class="w-full px-4 py-3 rounded-xl bg-black/40 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-neon-cyan"${add_attribute("value", audioUrlOverride, 0)}> <p class="text-xs text-white/60 mt-2" data-svelte-h="svelte-17zcyps">Tip: Host the file on a public URL (S3, Dropbox direct link, etc.). We&#39;ll fetch it server-side. On serverless hosts (e.g., Vercel), uploads larger than ~4.5MB will fail—use this URL option for big files.</p></div></div>  ${``}</div>` : `${displayState === "processing" ? ` <div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-yellow/50 shadow-neon-cyan animate-slide-in-up svelte-qu0ip0"><div class="text-center"><div class="text-8xl mb-6 animate-spin-slow svelte-qu0ip0" data-svelte-h="svelte-1cy31sa">⚡</div> <h2 class="text-4xl font-bold text-glow-cyan mb-8 svelte-qu0ip0" data-svelte-h="svelte-v0wttz">AI Minds Collaborating...</h2> ${validate_component(ProgressBar, "ProgressBar").$$render($$result, { progress: uploadProgress }, {}, {})} ${``} <div class="mt-8 space-y-4" data-svelte-h="svelte-6f7fs9"><p class="text-xl text-white/90">Processing your audio with 5 AI services...</p> <div class="flex justify-center space-x-4 text-sm"><span class="px-3 py-1 bg-blue-500/20 rounded-full animate-pulse">🤖 Whisper</span> <span class="px-3 py-1 bg-green-500/20 rounded-full animate-pulse" style="animation-delay: 0.5s">🤖 AssemblyAI</span> <span class="px-3 py-1 bg-purple-500/20 rounded-full animate-pulse" style="animation-delay: 1s">🤖 Deepgram</span> <span class="px-3 py-1 bg-pink-500/20 rounded-full animate-pulse" style="animation-delay: 1.5s">🤖 Gemini</span> <span class="px-3 py-1 bg-orange-500/20 rounded-full animate-pulse" style="animation-delay: 2s">🤖 ElevenLabs</span></div></div></div></div>` : `${displayState === "results" ? ` <div class="space-y-8 animate-slide-in-up svelte-qu0ip0"> <div class="text-center"><div class="text-8xl mb-4 animate-bounce-slow svelte-qu0ip0" data-svelte-h="svelte-1m0ioe2">🎯</div> <h2 class="text-4xl font-bold text-glow-green mb-4 svelte-qu0ip0" data-svelte-h="svelte-13icjcp">Transcription Complete!</h2> <p class="text-xl text-white/80">AI Consensus: <span class="text-glow-cyan font-bold svelte-qu0ip0">${escape(Math.round(0 * 100))}%</span></p></div>  <div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-green/50 shadow-neon-green svelte-qu0ip0">${validate_component(ResultsDisplay, "ResultsDisplay").$$render(
    $$result,
    {
      results: transcriptionResults,
      consensus: consensusResult
    },
    {},
    {}
  )}  <div class="flex justify-center space-x-6 mt-8"><button class="btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg svelte-qu0ip0" data-svelte-h="svelte-9ycdrg">🔄 Process Another File</button> <button class="btn-cyber-secondary text-white font-bold py-4 px-8 rounded-xl text-lg svelte-qu0ip0" data-svelte-h="svelte-14tgvai">📋 Copy Text</button></div></div></div>` : `${displayState === "error" ? ` <div class="glass-morphism neon-border rounded-3xl p-10 border-red-500 bg-red-500/10 animate-slide-in-up svelte-qu0ip0"><div class="text-center space-y-6"><div class="text-8xl animate-bounce" data-svelte-h="svelte-osaou2">⚠️</div> <div><h2 class="text-4xl font-bold text-red-400 mb-4" data-svelte-h="svelte-d6ntvg">Processing Failed</h2> <p class="text-xl text-red-300">${escape(errorMessage)}</p></div> <button class="btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg svelte-qu0ip0" data-svelte-h="svelte-3lalia">🔄 Try Again</button></div></div>` : ``}`}`}`}  ${``}  ${displayState === "upload" ? `<div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 mb-12 border-2 border-white/20 hover:border-neon-cyan/50 transition-all duration-500 transform hover:scale-[1.02] animate-slide-in-left svelte-qu0ip0"><div class="flex items-center space-x-4 mb-8" data-svelte-h="svelte-1vjqz6o"><div class="text-6xl animate-bounce-slow svelte-qu0ip0">🎤</div> <div><h2 class="text-4xl font-bold text-glow-cyan mb-2 svelte-qu0ip0">Upload Audio File</h2> <p class="text-xl text-white/80">Drag &amp; drop or click to select your audio masterpiece</p></div></div> ${validate_component(FileUpload, "FileUpload").$$render($$result, { disabled: isProcessingTranscription }, {}, {})} ${``}</div>` : ``}   ${``}  ${displayState === "processing" ? `<div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 mb-12 border-2 border-neon-yellow/50 shadow-neon-cyan animate-slide-in-left svelte-qu0ip0"><div class="text-center"><div class="text-8xl mb-6 animate-spin-slow svelte-qu0ip0" data-svelte-h="svelte-1cy31sa">⚡</div> <h2 class="text-4xl font-bold text-glow-cyan mb-8 svelte-qu0ip0" data-svelte-h="svelte-6p15cb">AI Brains Working...</h2> ${validate_component(ProgressBar, "ProgressBar").$$render($$result, { progress: uploadProgress }, {}, {})} <p class="text-lg text-white/60 mt-6 animate-pulse" data-svelte-h="svelte-ge38l0">🤖 Whisper analyzing... 🤖 AssemblyAI thinking... 🤖 Multiple AI minds collaborating...</p></div></div>` : ``}  ${transcriptionResults.length > 0 ? ` <div class="text-center mb-12 animate-fade-in-up svelte-qu0ip0"><div class="text-9xl mb-6 animate-bounce-slow svelte-qu0ip0" data-svelte-h="svelte-4avm97">🎯</div> <h1 class="text-6xl font-bold text-glow-green mb-4 svelte-qu0ip0" data-svelte-h="svelte-1jpowrr">AI Transcription Complete!</h1> <p class="text-2xl text-white/80 mb-2" data-svelte-h="svelte-gw7sd8">Multi-AI Consensus Analysis</p> <p class="text-lg text-neon-cyan">📁 ${escape("Audio File")} ${``}</p></div>  <div class="glass-morphism holographic rounded-3xl shadow-2xl p-10 border-2 border-neon-green/50 shadow-neon-green animate-slide-in-right svelte-qu0ip0">${validate_component(ResultsDisplay, "ResultsDisplay").$$render(
    $$result,
    {
      results: transcriptionResults,
      consensus: consensusResult
    },
    {},
    {}
  )}  <div class="flex justify-center space-x-6 mt-8"><button class="btn-cyber text-white font-bold py-4 px-8 rounded-xl text-lg svelte-qu0ip0" data-svelte-h="svelte-1m6c1n5">🔄 Process Another File</button> <button class="btn-cyber-secondary text-white font-bold py-4 px-8 rounded-xl text-lg svelte-qu0ip0" data-svelte-h="svelte-q5nqui">📋 Copy Text</button></div></div>` : ``}</div> </main>`;
});
export {
  Page as default
};
