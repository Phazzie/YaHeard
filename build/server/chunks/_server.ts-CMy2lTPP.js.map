{"version":3,"file":"_server.ts-CMy2lTPP.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/transcribe/_server.ts.js"],"sourcesContent":["import { g as getClientIP, c as checkRateLimit, a as validateCsrfFromForm, P as PERFORMANCE_CONFIG, C as ConsensusComparisonEngine } from \"../../../../chunks/security.js\";\nimport { j as json } from \"../../../../chunks/index.js\";\nconst UPLOAD_ENDPOINT = \"https://api.assemblyai.com/v2/upload\";\nconst TRANSCRIPT_ENDPOINT = \"https://api.assemblyai.com/v2/transcript\";\nclass AssemblyAIProcessor {\n  constructor(config = {}) {\n    this.serviceName = \"AssemblyAI\";\n    this.config = config;\n  }\n  async isAvailable() {\n    return !!this.config.apiKey;\n  }\n  async processFile(file) {\n    if (!this.config.apiKey) {\n      throw new Error(\"AssemblyAI API key not configured.\");\n    }\n    try {\n      const startTime = Date.now();\n      const uploadUrl = await this.uploadFile(file);\n      const transcriptId = await this.requestTranscription(uploadUrl);\n      const result = await this.pollForResult(transcriptId);\n      const processingTime = Date.now() - startTime;\n      return {\n        id: `assembly-${Date.now()}`,\n        serviceName: this.serviceName,\n        text: result.text,\n        confidence: result.confidence,\n        processingTimeMs: processingTime,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: {\n          model: \"assembly-ai-best\",\n          // AssemblyAI doesn't specify model versions in the response\n          language: result.language_code,\n          wordCount: result.words.length,\n          rawResponse: result\n          // Include the raw response for more details if needed\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n      console.error(`AssemblyAI processor error: ${errorMessage}`);\n      throw new Error(`AssemblyAI processor failed: ${errorMessage}`);\n    }\n  }\n  async uploadFile(file) {\n    const response = await fetch(UPLOAD_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"authorization\": this.config.apiKey,\n        \"content-type\": \"application/octet-stream\"\n      },\n      body: await file.arrayBuffer()\n    });\n    if (!response.ok) {\n      throw new Error(`Upload failed with status ${response.status}`);\n    }\n    const { upload_url } = await response.json();\n    return upload_url;\n  }\n  async requestTranscription(audioUrl) {\n    const response = await fetch(TRANSCRIPT_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        \"authorization\": this.config.apiKey,\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        audio_url: audioUrl,\n        language_code: this.config.options?.language || \"en\"\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Transcription request failed with status ${response.status}`);\n    }\n    const { id } = await response.json();\n    return id;\n  }\n  async pollForResult(transcriptId) {\n    const pollingEndpoint = `${TRANSCRIPT_ENDPOINT}/${transcriptId}`;\n    const maxAttempts = 30;\n    const delay = 1e3;\n    for (let i = 0; i < maxAttempts; i++) {\n      await new Promise((resolve) => setTimeout(resolve, delay));\n      const response = await fetch(pollingEndpoint, {\n        headers: { \"authorization\": this.config.apiKey }\n      });\n      const result = await response.json();\n      if (result.status === \"completed\") {\n        return result;\n      }\n      if (result.status === \"error\") {\n        throw new Error(`Transcription failed: ${result.error}`);\n      }\n    }\n    throw new Error(\"Transcription polling timed out after 30 seconds.\");\n  }\n  async getCostPerMinute() {\n    return 0.025;\n  }\n  getSupportedFormats() {\n    return [\".mp3\", \".wav\", \".m4a\", \".webm\", \".flac\"];\n  }\n}\nconst API_ENDPOINT$1 = \"https://api.deepgram.com/v1/listen\";\nclass DeepgramProcessor {\n  constructor(config = {}) {\n    this.serviceName = \"Deepgram\";\n    this.config = config;\n  }\n  async isAvailable() {\n    return !!this.config.apiKey;\n  }\n  async processFile(file) {\n    if (!this.config.apiKey) {\n      throw new Error(\"Deepgram API key not configured.\");\n    }\n    try {\n      const arrayBuffer = await file.arrayBuffer();\n      const base64Audio = this.arrayBufferToBase64(arrayBuffer);\n      const startTime = Date.now();\n      const options = {\n        model: this.config.options?.model || \"nova-2\",\n        smart_format: this.config.options?.smart_format ?? true,\n        punctuate: this.config.options?.punctuate ?? true,\n        utterances: this.config.options?.utterances ?? true,\n        language: this.config.options?.language || \"en-US\"\n      };\n      const response = await fetch(API_ENDPOINT$1, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Token ${this.config.apiKey}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          audio: base64Audio,\n          ...options\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Deepgram API error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      const processingTime = Date.now() - startTime;\n      const alternative = data.results?.channels?.[0]?.alternatives?.[0];\n      return {\n        id: `deepgram-${Date.now()}`,\n        serviceName: this.serviceName,\n        text: alternative?.transcript || \"\",\n        confidence: alternative?.confidence,\n        processingTimeMs: processingTime,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: {\n          model: options.model,\n          language: options.language,\n          wordCount: alternative?.words?.length || 0,\n          rawResponse: data\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n      console.error(`Deepgram processor error: ${errorMessage}`);\n      throw new Error(`Deepgram processor failed: ${errorMessage}`);\n    }\n  }\n  arrayBufferToBase64(buffer) {\n    const nodeBuffer = Buffer.from(buffer);\n    return nodeBuffer.toString(\"base64\");\n  }\n  async getCostPerMinute() {\n    return 43e-4;\n  }\n  getSupportedFormats() {\n    return [\".mp3\", \".wav\", \".m4a\", \".webm\", \".flac\", \".ogg\", \".aac\", \".wma\"];\n  }\n}\nconst API_ENDPOINT = \"https://api.elevenlabs.io/v1/speech-to-text\";\nclass ElevenLabsProcessor {\n  constructor(config = {}) {\n    this.serviceName = \"ElevenLabs\";\n    this.config = config;\n  }\n  async isAvailable() {\n    return !!this.config.apiKey;\n  }\n  async processFile(file) {\n    if (!this.config.apiKey) {\n      throw new Error(\"ElevenLabs API key not configured.\");\n    }\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      const model = this.config.options?.model || \"scribe_v1\";\n      const language = this.config.options?.language;\n      formData.append(\"model_id\", model);\n      if (language) {\n        formData.append(\"language_code\", language);\n      }\n      const startTime = Date.now();\n      const response = await fetch(API_ENDPOINT, {\n        method: \"POST\",\n        headers: {\n          \"xi-api-key\": this.config.apiKey\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`ElevenLabs API error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      const processingTime = Date.now() - startTime;\n      return {\n        id: `elevenlabs-${Date.now()}`,\n        serviceName: this.serviceName,\n        text: data.text || \"\",\n        confidence: data.confidence,\n        processingTimeMs: processingTime,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: {\n          model,\n          language: data.language_code,\n          wordCount: data.text ? data.text.split(\" \").length : 0,\n          apiVersion: \"v1\"\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n      console.error(`ElevenLabs processor error: ${errorMessage}`);\n      throw new Error(`ElevenLabs processor failed: ${errorMessage}`);\n    }\n  }\n  async getCostPerMinute() {\n    return 2e-3;\n  }\n  getSupportedFormats() {\n    return [\".mp3\", \".wav\", \".m4a\", \".webm\", \".flac\", \".ogg\", \".aac\"];\n  }\n}\nconst API_ENDPOINT_BASE = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent\";\nconst TRANSCRIPTION_PROMPT = \"Please transcribe this audio file. Provide only the transcribed text without any additional commentary or formatting.\";\nclass GeminiProcessor {\n  constructor(config = {}) {\n    this.serviceName = \"Google Gemini\";\n    this.config = config;\n  }\n  async isAvailable() {\n    return !!this.config.apiKey;\n  }\n  async processFile(file) {\n    if (!this.config.apiKey) {\n      throw new Error(\"Gemini API key not configured.\");\n    }\n    try {\n      const base64Audio = await this.arrayBufferToBase64(file);\n      const startTime = Date.now();\n      const requestBody = {\n        contents: [{\n          parts: [\n            { text: TRANSCRIPTION_PROMPT },\n            { inlineData: { mimeType: file.type || \"audio/wav\", data: base64Audio } }\n          ]\n        }],\n        generationConfig: {\n          temperature: this.config.options?.temperature || 0.1,\n          topK: this.config.options?.topK || 1,\n          topP: this.config.options?.topP || 1,\n          maxOutputTokens: this.config.options?.maxOutputTokens || 2048\n        }\n      };\n      const response = await fetch(API_ENDPOINT_BASE, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-goog-api-key\": this.config.apiKey\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Gemini API error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      const processingTime = Date.now() - startTime;\n      const candidate = data.candidates?.[0];\n      const transcribedText = candidate?.content?.parts?.[0]?.text || \"\";\n      if (!candidate) {\n        throw new Error(\"Gemini returned no candidates in response.\");\n      }\n      return {\n        id: `gemini-${Date.now()}`,\n        serviceName: this.serviceName,\n        text: transcribedText.trim(),\n        confidence: void 0,\n        // Gemini does not provide a confidence score.\n        processingTimeMs: processingTime,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: {\n          model: this.config.options?.model || \"gemini-2.0-flash-exp\",\n          apiVersion: \"v1beta\",\n          rawResponse: data\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n      console.error(`Gemini processor error: ${errorMessage}`);\n      throw new Error(`Gemini processor failed: ${errorMessage}`);\n    }\n  }\n  async arrayBufferToBase64(file) {\n    const arrayBuffer = await file.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n    return buffer.toString(\"base64\");\n  }\n  async getCostPerMinute() {\n    return 18e-4;\n  }\n  getSupportedFormats() {\n    return [\".wav\", \".mp3\", \".mp4\", \".m4a\", \".ogg\", \".webm\", \".flac\"];\n  }\n}\nclass WhisperProcessor {\n  constructor(config = {}) {\n    this.serviceName = \"Whisper\";\n    this.API_ENDPOINT = \"https://api.openai.com/v1/audio/transcriptions\";\n    this.config = config;\n  }\n  async isAvailable() {\n    return !!this.config.apiKey;\n  }\n  async processFile(file) {\n    if (!this.config.apiKey) {\n      throw new Error(\"Whisper API key not configured.\");\n    }\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      const model = this.config.options?.model || \"whisper-1\";\n      const language = this.config.options?.language;\n      formData.append(\"model\", model);\n      if (language) {\n        formData.append(\"language\", language);\n      }\n      const startTime = Date.now();\n      const response = await fetch(this.API_ENDPOINT, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${this.config.apiKey}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Whisper API error (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      const processingTime = Date.now() - startTime;\n      return {\n        id: `whisper-${Date.now()}`,\n        serviceName: this.serviceName,\n        text: data.text,\n        processingTimeMs: processingTime,\n        timestamp: /* @__PURE__ */ new Date(),\n        metadata: {\n          model,\n          language: data.language,\n          apiVersion: \"v1\",\n          wordCount: data.text.split(\" \").length\n        }\n      };\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n      console.error(`Whisper processor error: ${errorMessage}`);\n      throw new Error(`Whisper processor failed: ${errorMessage}`);\n    }\n  }\n  async getCostPerMinute() {\n    return 6e-3;\n  }\n  getSupportedFormats() {\n    return [\".mp3\", \".wav\", \".m4a\", \".webm\", \".flac\", \".ogg\"];\n  }\n}\nconst comparisonEngine = new ConsensusComparisonEngine();\nconst POST = async ({ request, cookies, fetch: fetch2 }) => {\n  try {\n    const clientIP = getClientIP(request);\n    const rateLimitResult = checkRateLimit(clientIP);\n    if (!rateLimitResult.allowed) {\n      return json(\n        {\n          error: rateLimitResult.error || \"Rate limit exceeded. Too many requests.\",\n          retryAfter: rateLimitResult.retryAfter\n        },\n        {\n          status: rateLimitResult.error ? 400 : 429,\n          headers: rateLimitResult.retryAfter ? {\n            \"Retry-After\": rateLimitResult.retryAfter?.toString() || \"900\"\n          } : {}\n        }\n      );\n    }\n    const formData = await request.formData();\n    const csrfCookie = cookies.get(\"csrfToken\");\n    if (!validateCsrfFromForm(formData, csrfCookie)) {\n      return json(\n        { error: \"Request could not be processed. Please try again.\" },\n        { status: 403 }\n      );\n    }\n    const audioFile = formData.get(\"audio\");\n    const audioUrl = formData.get(\"audioUrl\")?.trim() || \"\";\n    let fileForProcessing = null;\n    if (audioFile) {\n      fileForProcessing = audioFile;\n    } else if (audioUrl) {\n      try {\n        const resp = await fetch2(audioUrl);\n        if (!resp.ok) {\n          return json({ error: `Failed to fetch audio from URL (${resp.status})` }, { status: 400 });\n        }\n        const contentType = resp.headers.get(\"content-type\") || \"application/octet-stream\";\n        const arrayBuf = await resp.arrayBuffer();\n        const sizeBytes = arrayBuf.byteLength;\n        if (sizeBytes > PERFORMANCE_CONFIG.MAX_FILE_SIZE_BYTES) {\n          return json({ error: `Remote file too large: ${(sizeBytes / 1024 / 1024).toFixed(1)}MB (max ${(PERFORMANCE_CONFIG.MAX_FILE_SIZE_BYTES / 1024 / 1024).toFixed(1)}MB)` }, { status: 400 });\n        }\n        fileForProcessing = new File([new Uint8Array(arrayBuf)], \"remote-audio\", { type: contentType });\n      } catch (e) {\n        return json({ error: `Could not download audio from URL: ${e instanceof Error ? e.message : \"Unknown error\"}` }, { status: 400 });\n      }\n    } else {\n      return json({ error: \"No audio file or URL provided.\" }, { status: 400 });\n    }\n    const processors = initializeProcessors();\n    if (processors.length === 0) {\n      return json({ error: \"No AI services are configured on the server.\" }, { status: 500 });\n    }\n    const results = await processWithAllAIs(processors, fileForProcessing);\n    const successfulResults = results.filter((r) => r !== null);\n    if (successfulResults.length === 0) {\n      return json({ error: \"All AI services failed to process the audio file.\" }, { status: 500 });\n    }\n    let consensusResult;\n    try {\n      consensusResult = comparisonEngine.compareTranscriptions(successfulResults);\n    } catch (consensusError) {\n      console.warn(\"Consensus engine failed, using fallback.\", consensusError);\n      const bestResult = successfulResults.reduce(\n        (best, cur) => (cur.processingTimeMs || Infinity) < (best.processingTimeMs || Infinity) ? cur : best\n      );\n      const withConf = successfulResults.filter((r) => r.confidence !== void 0);\n      const averageConfidence = withConf.length ? withConf.reduce((s, r) => s + (r.confidence ?? 0), 0) / withConf.length : 0;\n      consensusResult = {\n        finalText: bestResult.text,\n        consensusConfidence: bestResult.confidence ?? 0,\n        individualResults: successfulResults,\n        disagreements: [],\n        stats: {\n          totalProcessingTimeMs: Math.max(...successfulResults.map((r) => r.processingTimeMs || 0)),\n          servicesUsed: successfulResults.length,\n          averageConfidence,\n          disagreementCount: 0\n        },\n        reasoning: {\n          finalReasoning: `Consensus algorithm failed. Fallback to fastest provider: ${bestResult.serviceName}.`,\n          steps: [{\n            stepNumber: 1,\n            description: \"The main consensus engine failed. Using fallback logic.\",\n            data: {\n              selectedService: bestResult.serviceName,\n              error: consensusError instanceof Error ? consensusError.message : String(consensusError)\n            }\n          }]\n        }\n      };\n    }\n    return json(consensusResult);\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n    console.error(`Transcription API Error: ${errorMessage}`);\n    const response = process.env.NODE_ENV === \"production\" ? { error: \"Failed to process audio file.\" } : { error: \"Failed to process audio file.\", details: errorMessage };\n    return json(response, { status: 500 });\n  }\n};\nfunction initializeProcessors() {\n  const processors = [];\n  if (process.env.OPENAI_API_KEY) processors.push(new WhisperProcessor({ apiKey: process.env.OPENAI_API_KEY }));\n  if (process.env.ASSEMBLYAI_API_KEY) processors.push(new AssemblyAIProcessor({ apiKey: process.env.ASSEMBLYAI_API_KEY }));\n  if (process.env.DEEPGRAM_API_KEY) processors.push(new DeepgramProcessor({ apiKey: process.env.DEEPGRAM_API_KEY }));\n  if (process.env.ELEVENLABS_API_KEY) processors.push(new ElevenLabsProcessor({ apiKey: process.env.ELEVENLABS_API_KEY }));\n  if (process.env.GEMINI_API_KEY) processors.push(new GeminiProcessor({ apiKey: process.env.GEMINI_API_KEY }));\n  return processors;\n}\nasync function processWithAllAIs(processors, file) {\n  const promises = processors.map((processor) => processWithTimeout(processor, file));\n  return Promise.all(promises);\n}\nasync function processWithTimeout(processor, file) {\n  try {\n    return await Promise.race([\n      processor.processFile(file),\n      new Promise(\n        (_, reject) => setTimeout(() => reject(new Error(\"Timeout\")), PERFORMANCE_CONFIG.SERVICE_TIMEOUT_MS)\n      )\n    ]);\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n    console.error(`${processor.serviceName} failed: ${errorMessage}`);\n    return null;\n  }\n}\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}